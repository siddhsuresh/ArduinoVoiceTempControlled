{"mappings":"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","sources":["src/public/js/threejsFan.js"],"sourcesContent":["var scene,\r\n  camera,\r\n  controls,\r\n  fieldOfView,\r\n  aspectRatio,\r\n  nearPlane,\r\n  farPlane,\r\n  shadowLight,\r\n  backLight,\r\n  light,\r\n  renderer,\r\n  container;\r\n\r\n//SCENE\r\nvar floor,\r\n  fan,\r\n  isBlowing = false;\r\nif ($(\"#switch\").is(\":checked\")) {\r\n  isBlowing = true;\r\n}\r\n//SCREEN VARIABLES\r\nvar HEIGHT,\r\n  WIDTH,\r\n  windowHalfX,\r\n  windowHalfY,\r\n  mousePos = { x: 0, y: 0 };\r\ndist = 0;\r\n\r\n//INIT THREE JS, SCREEN AND MOUSE EVENTS\r\n\r\nfunction init() {\r\n  scene = new THREE.Scene();\r\n  HEIGHT = window.innerHeight;\r\n  WIDTH = window.innerWidth;\r\n  aspectRatio = WIDTH / HEIGHT;\r\n  fieldOfView = 100;\r\n  nearPlane = 10;\r\n  farPlane = 1000;\r\n  camera = new THREE.PerspectiveCamera(\r\n    fieldOfView,\r\n    aspectRatio,\r\n    nearPlane,\r\n    farPlane\r\n  );\r\n  camera.position.y = 350;\r\n  camera.position.x = -50;\r\n  camera.position.z = 230;\r\n  camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n  renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(WIDTH, HEIGHT);\r\n  renderer.shadowMap.enabled = true;\r\n  container = document.getElementById(\"world\");\r\n  container.appendChild(renderer.domElement);\r\n  windowHalfX = WIDTH / 2;\r\n  windowHalfY = HEIGHT / 2;\r\n  window.addEventListener(\"resize\", onWindowResize, false);\r\n}\r\n\r\nfunction onWindowResize() {\r\n  HEIGHT = window.innerHeight;\r\n  WIDTH = window.innerWidth;\r\n  windowHalfX = WIDTH / 2;\r\n  windowHalfY = HEIGHT / 2;\r\n  renderer.setSize(WIDTH, HEIGHT);\r\n  camera.aspect = WIDTH / HEIGHT;\r\n  camera.updateProjectionMatrix();\r\n}\r\n\r\nfunction createLights() {\r\n  light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\r\n\r\n  shadowLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n  shadowLight.position.set(200, 200, 200);\r\n  shadowLight.castShadow = true;\r\n  shadowLight.shadowDarkness = 0.2;\r\n\r\n  backLight = new THREE.DirectionalLight(0xffffff, 0.4);\r\n  backLight.position.set(-100, 200, 50);\r\n  backLight.shadowDarkness = 0.1;\r\n  backLight.castShadow = true;\r\n\r\n  scene.add(backLight);\r\n  scene.add(light);\r\n  scene.add(shadowLight);\r\n}\r\n\r\nfunction createFloor() {\r\n  floor = new THREE.Mesh(\r\n    new THREE.PlaneBufferGeometry(1000, 500),\r\n    new THREE.MeshBasicMaterial({ color: 0xebe5e7 })\r\n  );\r\n  floor.rotation.x = -Math.PI / 2;\r\n  floor.position.y = -100;\r\n  floor.receiveShadow = true;\r\n  scene.add(floor);\r\n}\r\n\r\nfunction createFan() {\r\n  fan = new Fan();\r\n  fan.threegroup.position.z = 100;\r\n  fan.threegroup.position.y = 50;\r\n  scene.add(fan.threegroup);\r\n}\r\n\r\nFan = function () {\r\n  this.isBlowing = false;\r\n  this.speed = 0;\r\n  this.acc = 0;\r\n  this.redMat = new THREE.MeshLambertMaterial({\r\n    color: 0xad3525,\r\n    shading: THREE.FlatShading,\r\n  });\r\n  this.greyMat = new THREE.MeshLambertMaterial({\r\n    color: 0x653f4c,\r\n    shading: THREE.FlatShading,\r\n  });\r\n\r\n  this.yellowMat = new THREE.MeshLambertMaterial({\r\n    color: 0xfdd276,\r\n    shading: THREE.FlatShading,\r\n  });\r\n\r\n  var coreGeom = new THREE.BoxGeometry(10, 10, 20);\r\n  var sphereGeom = new THREE.BoxGeometry(10, 10, 3);\r\n  var propGeom = new THREE.BoxGeometry(10, 30, 2);\r\n  propGeom.applyMatrix4(new THREE.Matrix4().makeTranslation(0, 25, 0));\r\n\r\n  this.core = new THREE.Mesh(coreGeom, this.greyMat);\r\n\r\n  // propellers\r\n  var prop1 = new THREE.Mesh(propGeom, this.redMat);\r\n  prop1.position.z = 15;\r\n  var prop2 = prop1.clone();\r\n  prop2.rotation.z = Math.PI / 2;\r\n  var prop3 = prop1.clone();\r\n  prop3.rotation.z = Math.PI;\r\n  var prop4 = prop1.clone();\r\n  prop4.rotation.z = -Math.PI / 2;\r\n\r\n  this.sphere = new THREE.Mesh(sphereGeom, this.yellowMat);\r\n  this.sphere.position.z = 15;\r\n\r\n  this.propeller = new THREE.Group();\r\n  this.propeller.add(prop1);\r\n  this.propeller.add(prop2);\r\n  this.propeller.add(prop3);\r\n  this.propeller.add(prop4);\r\n\r\n  this.threegroup = new THREE.Group();\r\n  this.threegroup.add(this.core);\r\n  this.threegroup.add(this.propeller);\r\n  this.threegroup.add(this.sphere);\r\n};\r\n\r\nFan.prototype.update = function (xTarget, yTarget) {\r\n  this.threegroup.lookAt(new THREE.Vector3(0, 80, 60));\r\n  this.tPosX = rule3(xTarget, -200, 200, -250, 250);\r\n  this.tPosY = rule3(yTarget, -200, 200, 250, -250);\r\n\r\n  this.threegroup.position.x += (this.tPosX - this.threegroup.position.x) / 10;\r\n  this.threegroup.position.y += (this.tPosY - this.threegroup.position.y) / 10;\r\n\r\n  this.targetSpeed = this.isBlowing ? 0.3 : 0.01;\r\n  if (this.isBlowing && this.speed < 0.5) {\r\n    this.acc += 0.001;\r\n    this.speed += this.acc;\r\n  } else if (!this.isBlowing) {\r\n    this.acc = 0;\r\n    this.speed *= 0.98;\r\n  }\r\n  this.propeller.rotation.z += this.speed;\r\n};\r\nfunction loop() {\r\n  render();\r\n  var xTarget = mousePos.x - windowHalfX;\r\n  var yTarget = mousePos.y - windowHalfY;\r\n\r\n  fan.isBlowing = isBlowing;\r\n  fan.update(xTarget, yTarget);\r\n  requestAnimationFrame(loop);\r\n}\r\n\r\nfunction render() {\r\n  if (controls) controls.update();\r\n  renderer.render(scene, camera);\r\n}\r\n\r\ninit();\r\ncreateLights();\r\ncreateFloor();\r\ncreateFan();\r\nloop();\r\n\r\nfunction clamp(v, min, max) {\r\n  return Math.min(Math.max(v, min), max);\r\n}\r\n\r\nfunction rule3(v, vmin, vmax, tmin, tmax) {\r\n  var nv = Math.max(Math.min(v, vmax), vmin);\r\n  var dv = vmax - vmin;\r\n  var pc = (nv - vmin) / dv;\r\n  var dt = tmax - tmin;\r\n  var tv = tmin + pc * dt;\r\n  return tv;\r\n}\r\n"],"names":["scene","camera","controls","fieldOfView","aspectRatio","nearPlane","farPlane","shadowLight","backLight","light","renderer","container","floor","fan","isBlowing","$","is","HEIGHT","WIDTH","windowHalfX","windowHalfY","mousePos","x","y","init","THREE","Scene","window","innerHeight","innerWidth","PerspectiveCamera","position","z","lookAt","Vector3","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","document","getElementById","appendChild","domElement","addEventListener","onWindowResize","aspect","updateProjectionMatrix","createLights","HemisphereLight","DirectionalLight","set","castShadow","shadowDarkness","add","createFloor","Mesh","PlaneBufferGeometry","MeshBasicMaterial","color","rotation","Math","PI","receiveShadow","createFan","Fan","threegroup","loop","render","xTarget","yTarget","update","requestAnimationFrame","clamp","v","min","max","rule3","vmin","vmax","tmin","tmax","dist","this","speed","acc","redMat","MeshLambertMaterial","shading","FlatShading","greyMat","yellowMat","coreGeom","BoxGeometry","sphereGeom","propGeom","applyMatrix4","Matrix4","makeTranslation","core","prop1","prop2","clone","prop3","prop4","sphere","propeller","Group","prototype","tPosX","tPosY","targetSpeed"],"version":3,"file":"Fan.ddad8270.js.map"}