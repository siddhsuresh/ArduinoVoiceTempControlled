{"mappings":"AAAA,IAAIA,kBAAoBA,mBAAqBC,wBACzCC,kBAAoBA,mBAAqBC,wBACzCC,uBACFA,wBAA0BC,6BAExBC,SAAW,CAAC,QAAS,QACrBC,QACF,oDACAD,SAASE,KAAK,OACd,KAEEC,YAAc,IAAIT,kBAClBU,sBAAwB,IAAIR,kBAChCQ,sBAAsBC,cAAcJ,QAAS,GAC7CE,YAAYG,SAAWF,sBACvBD,YAAYI,YAAa,EACzBJ,YAAYK,KAAO,QACnBL,YAAYM,gBAAiB,EAC7BN,YAAYO,gBAAkB,EAE9BV,SAASW,SAAQ,SAAUC,EAAGC,EAAGC,GAC/BC,QAAQC,IAAIJ,EAAGC,MAGjBI,SAASC,eAAe,OAAOC,QAAU,WACvChB,YAAYiB,QACZH,SAASC,eAAe,cAAcG,YACpC,gCACFN,QAAQC,IAAI,gCAGdb,YAAYmB,SAAW,SAAUC,GAS/B,IAAIC,EAAUD,EAAME,QAAQ,GAAG,GAAGC,WAClCX,QAAQC,IAAI,oBAAsBQ,GAClCP,SAASC,eAAe,cAAcG,YACpC,oBAAsBG,EACR,UAAZA,GAAwBG,EAAE,WAAWC,GAAG,YAErB,SAAZJ,GAAsBG,EAAE,WAAWC,GAAG,aAC/CD,EAAE,WAAWE,QAAQ,SAFrBF,EAAE,WAAWE,QAAQ,SAIvBd,QAAQC,IAAI,eAAiBO,EAAME,QAAQ,GAAG,GAAGK,aAGnD3B,YAAY4B,YAAc,WACxB5B,YAAY6B,QAGd7B,YAAY8B,UAAY,SAAUV,GAChCW,WAAWb,YAAc,oCAG3BlB,YAAYgC,QAAU,SAAUZ,GAC9BW,WAAWb,YAAc,kCAAoCE,EAAMa","sources":["src/public/js/voiceCommands.js"],"sourcesContent":["var SpeechRecognition = SpeechRecognition || webkitSpeechRecognition;\r\nvar SpeechGrammarList = SpeechGrammarList || webkitSpeechGrammarList;\r\nvar SpeechRecognitionEvent =\r\n  SpeechRecognitionEvent || webkitSpeechRecognitionEvent;\r\n\r\nvar commands = [\"start\", \"stop\"];\r\nvar grammar =\r\n  \"#JSGF V1.0; grammar commands; public <command> = \" +\r\n  commands.join(\" | \") +\r\n  \" ;\";\r\n\r\nvar recognition = new SpeechRecognition();\r\nvar speechRecognitionList = new SpeechGrammarList();\r\nspeechRecognitionList.addFromString(grammar, 1);\r\nrecognition.grammars = speechRecognitionList;\r\nrecognition.continuous = false;\r\nrecognition.lang = \"en-US\";\r\nrecognition.interimResults = false;\r\nrecognition.maxAlternatives = 1;\r\n\r\ncommands.forEach(function (v, i, a) {\r\n  console.log(v, i);\r\n});\r\n\r\ndocument.getElementById(\"mic\").onclick = function () {\r\n  recognition.start();\r\n  document.getElementById(\"modal-info\").textContent =\r\n    \"Ready to Receive a Command...\";\r\n  console.log(\"Ready to receive a Command.\");\r\n};\r\n\r\nrecognition.onresult = function (event) {\r\n  // The SpeechRecognitionEvent results property returns a SpeechRecognitionResultList object\r\n  // The SpeechRecognitionResultList object contains SpeechRecognitionResult objects.\r\n  // It has a getter so it can be accessed like an array\r\n  // The first [0] returns the SpeechRecognitionResult at the last position.\r\n  // Each SpeechRecognitionResult object contains SpeechRecognitionAlternative objects that contain individual results.\r\n  // These also have getters so they can be accessed like arrays.\r\n  // The second [0] returns the SpeechRecognitionAlternative at position 0.\r\n  // We then return the transcript property of the SpeechRecognitionAlternative object\r\n  var command = event.results[0][0].transcript;\r\n  console.log(\"Command Recived: \" + command);\r\n  document.getElementById(\"modal-info\").textContent =\r\n    \"Command Recieved \" + command;\r\n  if (command === \"start\" && !$(\"#switch\").is(\":checked\")) {\r\n    $(\"#switch\").trigger(\"click\");\r\n  } else if (command === \"stop\" && $(\"#switch\").is(\":checked\")) {\r\n    $(\"#switch\").trigger(\"click\");\r\n  }\r\n  console.log(\"Confidence: \" + event.results[0][0].confidence);\r\n};\r\n\r\nrecognition.onspeechend = function () {\r\n  recognition.stop();\r\n};\r\n\r\nrecognition.onnomatch = function (event) {\r\n  diagnostic.textContent = \"I didn't recognise that command.\";\r\n};\r\n\r\nrecognition.onerror = function (event) {\r\n  diagnostic.textContent = \"Error occurred in recognition: \" + event.error;\r\n};\r\n"],"names":["SpeechRecognition","webkitSpeechRecognition","SpeechGrammarList","webkitSpeechGrammarList","SpeechRecognitionEvent","webkitSpeechRecognitionEvent","commands","grammar","join","recognition","speechRecognitionList","addFromString","grammars","continuous","lang","interimResults","maxAlternatives","forEach","v","i","a","console","log","document","getElementById","onclick","start","textContent","onresult","event","command","results","transcript","$","is","trigger","confidence","onspeechend","stop","onnomatch","diagnostic","onerror","error"],"version":3,"file":"Fan.1f9c4a2f.js.map"}