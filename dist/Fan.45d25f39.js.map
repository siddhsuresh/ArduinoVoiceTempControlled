{"mappings":"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","sources":["src/public/js/threejsFan.js"],"sourcesContent":["var scene,\r\n  camera,\r\n  controls,\r\n  fieldOfView,\r\n  aspectRatio,\r\n  nearPlane,\r\n  farPlane,\r\n  shadowLight,\r\n  backLight,\r\n  light,\r\n  renderer, \r\n  planeAspectRatio,\r\n  container;\r\n\r\n//SCENE\r\nvar floor,\r\n  fan,\r\n  isBlowing = false;\r\nif ($(\"#switch\").is(\":checked\")) {\r\n  isBlowing = true;\r\n}\r\n//SCREEN VARIABLES\r\nvar HEIGHT,\r\n  WIDTH,\r\n  windowHalfX,\r\n  windowHalfY,\r\n  mousePos = { x: 0, y: 0 };\r\nvar dist = 0;\r\n\r\n//INIT THREE JS, SCREEN AND MOUSE EVENTS\r\n\r\nfunction init() {\r\n  scene = new THREE.Scene();\r\n  HEIGHT = window.innerHeight;\r\n  WIDTH = window.innerWidth;\r\n  aspectRatio = WIDTH / HEIGHT;\r\n  fieldOfView = 100;\r\n  nearPlane = 10;\r\n  farPlane = 1000;\r\n  planeAspectRatio = 16 / 9;\r\n  camera = new THREE.PerspectiveCamera(\r\n    fieldOfView,\r\n    aspectRatio,\r\n    nearPlane,\r\n    farPlane\r\n  );\r\n  fieldOfView = 50;\r\n   camera.aspect = window.innerWidth / window.innerHeight;\r\n\tif (camera.aspect > planeAspectRatio) {\r\n\t\t// window too large\r\n\t\tconst cameraHeight = Math.tan(THREE.MathUtils.degToRad(fieldOfView / 2));\r\n\t\tconst ratio = camera.aspect / planeAspectRatio;\r\n\t\tconst newCameraHeight = cameraHeight / ratio;\r\n\t\tcamera.fov = THREE.MathUtils.radToDeg(Math.atan(newCameraHeight)) * 2;\r\n\t} else {\r\n\t\t// window too narrow\r\n\t\tcamera.fov = fieldOfView;\r\n\t}\r\n  camera.position.y = 350;\r\n  camera.position.x = -50;\r\n  camera.position.z = 230;\r\n  camera.lookAt(new THREE.Vector3(0, 0, 0));\r\n  renderer = new THREE.WebGLRenderer({ alpha: true, antialias: true });\r\n  renderer.setPixelRatio(window.devicePixelRatio);\r\n  renderer.setSize(WIDTH, HEIGHT);\r\n  renderer.shadowMap.enabled = true;\r\n  container = document.getElementById(\"world\");\r\n  container.appendChild(renderer.domElement);\r\n  windowHalfX = WIDTH / 2;\r\n  windowHalfY = HEIGHT / 2;\r\n}\r\n\r\nwindow.addEventListener('resize', () => {\t\r\n\tcamera.aspect = window.innerWidth / window.innerHeight;\r\n\t\r\n\tif (camera.aspect > planeAspectRatio) {\r\n\t\t// window too large\r\n\t\tconst cameraHeight = Math.tan(THREE.MathUtils.degToRad(fieldOfView / 2));\r\n\t\tconst ratio = camera.aspect / planeAspectRatio;\r\n\t\tconst newCameraHeight = cameraHeight / ratio;\r\n\t\tcamera.fieldOfView = THREE.MathUtils.radToDeg(Math.atan(newCameraHeight)) * 2;\r\n\t} else {\r\n\t\t// window too narrow\r\n\t\tcamera.fieldOfView = fieldOfView;\r\n\t}\r\n})\r\n\r\nfunction createLights() {\r\n  light = new THREE.HemisphereLight(0xffffff, 0xffffff, 0.5);\r\n\r\n  shadowLight = new THREE.DirectionalLight(0xffffff, 0.8);\r\n  shadowLight.position.set(200, 200, 200);\r\n  shadowLight.castShadow = true;\r\n  shadowLight.shadowDarkness = 0.2;\r\n\r\n  backLight = new THREE.DirectionalLight(0xffffff, 0.4);\r\n  backLight.position.set(-100, 200, 50);\r\n  backLight.shadowDarkness = 0.1;\r\n  backLight.castShadow = true;\r\n\r\n  scene.add(backLight);\r\n  scene.add(light);\r\n  scene.add(shadowLight);\r\n}\r\n\r\nfunction createFan() {\r\n  fan = new Fan();\r\n  fan.threegroup.position.z = 100;\r\n  fan.threegroup.position.y = 50;\r\n  scene.add(fan.threegroup);\r\n}\r\n\r\nFan = function () {\r\n  this.isBlowing = false;\r\n  this.speed = 0;\r\n  this.acc = 0;\r\n  this.redMat = new THREE.MeshLambertMaterial({\r\n    color: 0xad3525,\r\n    shading: THREE.FlatShading,\r\n  });\r\n  this.greyMat = new THREE.MeshLambertMaterial({\r\n    color: 0x653f4c,\r\n    shading: THREE.FlatShading,\r\n  });\r\n\r\n  this.yellowMat = new THREE.MeshLambertMaterial({\r\n    color: 0xfdd276,\r\n    shading: THREE.FlatShading,\r\n  });\r\n\r\n  var coreGeom = new THREE.BoxGeometry(10, 10, 20);\r\n  var sphereGeom = new THREE.BoxGeometry(10, 10, 3);\r\n  var propGeom = new THREE.BoxGeometry(10, 30, 2);\r\n  propGeom.applyMatrix4(new THREE.Matrix4().makeTranslation(0, 25, 0));\r\n\r\n  this.core = new THREE.Mesh(coreGeom, this.greyMat);\r\n\r\n  // propellers\r\n  var prop1 = new THREE.Mesh(propGeom, this.redMat);\r\n  prop1.position.z = 15;\r\n  var prop2 = prop1.clone();\r\n  prop2.rotation.z = Math.PI / 2;\r\n  var prop3 = prop1.clone();\r\n  prop3.rotation.z = Math.PI;\r\n  var prop4 = prop1.clone();\r\n  prop4.rotation.z = -Math.PI / 2;\r\n\r\n  this.sphere = new THREE.Mesh(sphereGeom, this.yellowMat);\r\n  this.sphere.position.z = 15;\r\n\r\n  this.propeller = new THREE.Group();\r\n  this.propeller.add(prop1);\r\n  this.propeller.add(prop2);\r\n  this.propeller.add(prop3);\r\n  this.propeller.add(prop4);\r\n\r\n  this.threegroup = new THREE.Group();\r\n  this.threegroup.add(this.core);\r\n  this.threegroup.add(this.propeller);\r\n  this.threegroup.add(this.sphere);\r\n};\r\n\r\nFan.prototype.update = function (xTarget, yTarget) {\r\n  this.threegroup.lookAt(new THREE.Vector3(0, 80, 60));\r\n  this.tPosX = rule3(xTarget, -200, 200, -250, 250);\r\n  this.tPosY = rule3(yTarget, -200, 200, 250, -250);\r\n\r\n  this.threegroup.position.x += (this.tPosX - this.threegroup.position.x) / 10;\r\n  this.threegroup.position.y += (this.tPosY - this.threegroup.position.y) / 10;\r\n\r\n  this.targetSpeed = this.isBlowing ? 0.3 : 0.01;\r\n  if (this.isBlowing && this.speed < 0.5) {\r\n    this.acc += 0.001;\r\n    this.speed += this.acc;\r\n  } else if (!this.isBlowing) {\r\n    this.acc = 0;\r\n    this.speed *= 0.98;\r\n  }\r\n  this.propeller.rotation.z += this.speed;\r\n};\r\nfunction loop() {\r\n  render();\r\n  var xTarget = mousePos.x - windowHalfX;\r\n  var yTarget = mousePos.y - windowHalfY;\r\n\r\n  fan.isBlowing = isBlowing;\r\n  fan.update(xTarget, yTarget);\r\n  requestAnimationFrame(loop);\r\n}\r\n\r\nfunction render() {\r\n  if (controls) controls.update();\r\n  renderer.render(scene, camera);\r\n}\r\n\r\ninit();\r\ncreateLights();\r\ncreateFan();\r\nloop();\r\n\r\nfunction clamp(v, min, max) {\r\n  return Math.min(Math.max(v, min), max);\r\n}\r\n\r\nfunction rule3(v, vmin, vmax, tmin, tmax) {\r\n  var nv = Math.max(Math.min(v, vmax), vmin);\r\n  var dv = vmax - vmin;\r\n  var pc = (nv - vmin) / dv;\r\n  var dt = tmax - tmin;\r\n  var tv = tmin + pc * dt;\r\n  return tv;\r\n}"],"names":["scene","camera","controls","fieldOfView","aspectRatio","nearPlane","farPlane","shadowLight","backLight","light","renderer","planeAspectRatio","container","floor","fan","isBlowing","$","is","HEIGHT","WIDTH","windowHalfX","windowHalfY","mousePos","x","y","dist","init","THREE","Scene","window","innerHeight","innerWidth","PerspectiveCamera","aspect","newCameraHeight","Math","tan","MathUtils","degToRad","fov","radToDeg","atan","position","z","lookAt","Vector3","WebGLRenderer","alpha","antialias","setPixelRatio","devicePixelRatio","setSize","shadowMap","enabled","document","getElementById","appendChild","domElement","createLights","HemisphereLight","DirectionalLight","set","castShadow","shadowDarkness","add","createFan","Fan","threegroup","loop","render","xTarget","yTarget","update","requestAnimationFrame","clamp","v","min","max","rule3","vmin","vmax","tmin","tmax","addEventListener","this","speed","acc","redMat","MeshLambertMaterial","color","shading","FlatShading","greyMat","yellowMat","coreGeom","BoxGeometry","sphereGeom","propGeom","applyMatrix4","Matrix4","makeTranslation","core","Mesh","prop1","prop2","clone","rotation","PI","prop3","prop4","sphere","propeller","Group","prototype","tPosX","tPosY","targetSpeed"],"version":3,"file":"Fan.45d25f39.js.map"}