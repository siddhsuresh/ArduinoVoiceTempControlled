{"mappings":"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","sources":["node_modules/socket.io/node_modules/parseuri/index.js","node_modules/socket.io/node_modules/has-cors/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/globalThis.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/xmlhttprequest.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/util.js","node_modules/socket.io/node_modules/@socket.io/component-emitter/index.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/commons.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/base64-arraybuffer/dist/base64-arraybuffer.es5.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/encodePacket.browser.js","node_modules/socket.io/node_modules/yeast/index.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/decodePacket.browser.js","node_modules/socket.io/node_modules/engine.io-client/node_modules/engine.io-parser/build/esm/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transport.js","node_modules/socket.io/node_modules/parseqs/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/polling.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/polling-xhr.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket-constructor.browser.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/websocket.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/transports/index.js","node_modules/socket.io/node_modules/engine.io-client/build/esm/socket.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/is-binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/binary.js","node_modules/socket.io/node_modules/socket.io-parser/build/esm/index.js","node_modules/socket.io/build/esm/on.js","node_modules/socket.io/build/esm/socket.js","node_modules/socket.io/node_modules/backo2/index.js","node_modules/socket.io/build/esm/manager.js","node_modules/socket.io/build/esm/index.js","node_modules/socket.io/build/esm/url.js"],"sourcesContent":["/**\n * Parses an URI\n *\n * @author Steven Levithan <stevenlevithan.com> (MIT license)\n * @api private\n */\n\nvar re = /^(?:(?![^:@]+:[^:@\\/]*@)(http|https|ws|wss):\\/\\/)?((?:(([^:@]*)(?::([^:@]*))?)?@)?((?:[a-f0-9]{0,4}:){2,7}[a-f0-9]{0,4}|[^:\\/?#]*)(?::(\\d*))?)(((\\/(?:[^?#](?![^?#\\/]*\\.[^?#\\/.]+(?:[?#]|$)))*\\/?)?([^?#\\/]*))(?:\\?([^#]*))?(?:#(.*))?)/;\n\nvar parts = [\n    'source', 'protocol', 'authority', 'userInfo', 'user', 'password', 'host', 'port', 'relative', 'path', 'directory', 'file', 'query', 'anchor'\n];\n\nmodule.exports = function parseuri(str) {\n    var src = str,\n        b = str.indexOf('['),\n        e = str.indexOf(']');\n\n    if (b != -1 && e != -1) {\n        str = str.substring(0, b) + str.substring(b, e).replace(/:/g, ';') + str.substring(e, str.length);\n    }\n\n    var m = re.exec(str || ''),\n        uri = {},\n        i = 14;\n\n    while (i--) {\n        uri[parts[i]] = m[i] || '';\n    }\n\n    if (b != -1 && e != -1) {\n        uri.source = src;\n        uri.host = uri.host.substring(1, uri.host.length - 1).replace(/;/g, ':');\n        uri.authority = uri.authority.replace('[', '').replace(']', '').replace(/;/g, ':');\n        uri.ipv6uri = true;\n    }\n\n    uri.pathNames = pathNames(uri, uri['path']);\n    uri.queryKey = queryKey(uri, uri['query']);\n\n    return uri;\n};\n\nfunction pathNames(obj, path) {\n    var regx = /\\/{2,9}/g,\n        names = path.replace(regx, \"/\").split(\"/\");\n\n    if (path.substr(0, 1) == '/' || path.length === 0) {\n        names.splice(0, 1);\n    }\n    if (path.substr(path.length - 1, 1) == '/') {\n        names.splice(names.length - 1, 1);\n    }\n\n    return names;\n}\n\nfunction queryKey(uri, query) {\n    var data = {};\n\n    query.replace(/(?:^|&)([^&=]*)=?([^&]*)/g, function ($0, $1, $2) {\n        if ($1) {\n            data[$1] = $2;\n        }\n    });\n\n    return data;\n}\n","\n/**\n * Module exports.\n *\n * Logic borrowed from Modernizr:\n *\n *   - https://github.com/Modernizr/Modernizr/blob/master/feature-detects/cors.js\n */\n\ntry {\n  module.exports = typeof XMLHttpRequest !== 'undefined' &&\n    'withCredentials' in new XMLHttpRequest();\n} catch (err) {\n  // if XMLHttp support is disabled in IE then it will throw\n  // when trying to create\n  module.exports = false;\n}\n","export default (() => {\n    if (typeof self !== \"undefined\") {\n        return self;\n    }\n    else if (typeof window !== \"undefined\") {\n        return window;\n    }\n    else {\n        return Function(\"return this\")();\n    }\n})();\n","// browser shim for xmlhttprequest module\nimport hasCORS from \"has-cors\";\nimport globalThis from \"../globalThis.js\";\nexport default function (opts) {\n    const xdomain = opts.xdomain;\n    // XMLHttpRequest can be disabled on IE\n    try {\n        if (\"undefined\" !== typeof XMLHttpRequest && (!xdomain || hasCORS)) {\n            return new XMLHttpRequest();\n        }\n    }\n    catch (e) { }\n    if (!xdomain) {\n        try {\n            return new globalThis[[\"Active\"].concat(\"Object\").join(\"X\")](\"Microsoft.XMLHTTP\");\n        }\n        catch (e) { }\n    }\n}\n","import globalThis from \"./globalThis.js\";\nexport function pick(obj, ...attr) {\n    return attr.reduce((acc, k) => {\n        if (obj.hasOwnProperty(k)) {\n            acc[k] = obj[k];\n        }\n        return acc;\n    }, {});\n}\n// Keep a reference to the real timeout functions so they can be used when overridden\nconst NATIVE_SET_TIMEOUT = setTimeout;\nconst NATIVE_CLEAR_TIMEOUT = clearTimeout;\nexport function installTimerFunctions(obj, opts) {\n    if (opts.useNativeTimers) {\n        obj.setTimeoutFn = NATIVE_SET_TIMEOUT.bind(globalThis);\n        obj.clearTimeoutFn = NATIVE_CLEAR_TIMEOUT.bind(globalThis);\n    }\n    else {\n        obj.setTimeoutFn = setTimeout.bind(globalThis);\n        obj.clearTimeoutFn = clearTimeout.bind(globalThis);\n    }\n}\n","\n/**\n * Expose `Emitter`.\n */\n\nexports.Emitter = Emitter;\n\n/**\n * Initialize a new `Emitter`.\n *\n * @api public\n */\n\nfunction Emitter(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the emitter properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in Emitter.prototype) {\n    obj[key] = Emitter.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Listen on the given `event` with `fn`.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.on =\nEmitter.prototype.addEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\n    .push(fn);\n  return this;\n};\n\n/**\n * Adds an `event` listener that will be invoked a single\n * time then automatically removed.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.once = function(event, fn){\n  function on() {\n    this.off(event, on);\n    fn.apply(this, arguments);\n  }\n\n  on.fn = fn;\n  this.on(event, on);\n  return this;\n};\n\n/**\n * Remove the given callback for `event` or all\n * registered callbacks.\n *\n * @param {String} event\n * @param {Function} fn\n * @return {Emitter}\n * @api public\n */\n\nEmitter.prototype.off =\nEmitter.prototype.removeListener =\nEmitter.prototype.removeAllListeners =\nEmitter.prototype.removeEventListener = function(event, fn){\n  this._callbacks = this._callbacks || {};\n\n  // all\n  if (0 == arguments.length) {\n    this._callbacks = {};\n    return this;\n  }\n\n  // specific event\n  var callbacks = this._callbacks['$' + event];\n  if (!callbacks) return this;\n\n  // remove all handlers\n  if (1 == arguments.length) {\n    delete this._callbacks['$' + event];\n    return this;\n  }\n\n  // remove specific handler\n  var cb;\n  for (var i = 0; i < callbacks.length; i++) {\n    cb = callbacks[i];\n    if (cb === fn || cb.fn === fn) {\n      callbacks.splice(i, 1);\n      break;\n    }\n  }\n\n  // Remove event specific arrays for event types that no\n  // one is subscribed for to avoid memory leak.\n  if (callbacks.length === 0) {\n    delete this._callbacks['$' + event];\n  }\n\n  return this;\n};\n\n/**\n * Emit `event` with the given args.\n *\n * @param {String} event\n * @param {Mixed} ...\n * @return {Emitter}\n */\n\nEmitter.prototype.emit = function(event){\n  this._callbacks = this._callbacks || {};\n\n  var args = new Array(arguments.length - 1)\n    , callbacks = this._callbacks['$' + event];\n\n  for (var i = 1; i < arguments.length; i++) {\n    args[i - 1] = arguments[i];\n  }\n\n  if (callbacks) {\n    callbacks = callbacks.slice(0);\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\n      callbacks[i].apply(this, args);\n    }\n  }\n\n  return this;\n};\n\n// alias used for reserved events (protected method)\nEmitter.prototype.emitReserved = Emitter.prototype.emit;\n\n/**\n * Return array of callbacks for `event`.\n *\n * @param {String} event\n * @return {Array}\n * @api public\n */\n\nEmitter.prototype.listeners = function(event){\n  this._callbacks = this._callbacks || {};\n  return this._callbacks['$' + event] || [];\n};\n\n/**\n * Check if this emitter has `event` handlers.\n *\n * @param {String} event\n * @return {Boolean}\n * @api public\n */\n\nEmitter.prototype.hasListeners = function(event){\n  return !! this.listeners(event).length;\n};\n","const PACKET_TYPES = Object.create(null); // no Map = no polyfill\nPACKET_TYPES[\"open\"] = \"0\";\nPACKET_TYPES[\"close\"] = \"1\";\nPACKET_TYPES[\"ping\"] = \"2\";\nPACKET_TYPES[\"pong\"] = \"3\";\nPACKET_TYPES[\"message\"] = \"4\";\nPACKET_TYPES[\"upgrade\"] = \"5\";\nPACKET_TYPES[\"noop\"] = \"6\";\nconst PACKET_TYPES_REVERSE = Object.create(null);\nObject.keys(PACKET_TYPES).forEach(key => {\n    PACKET_TYPES_REVERSE[PACKET_TYPES[key]] = key;\n});\nconst ERROR_PACKET = { type: \"error\", data: \"parser error\" };\nexport { PACKET_TYPES, PACKET_TYPES_REVERSE, ERROR_PACKET };\n","/*\n * base64-arraybuffer 1.0.1 <https://github.com/niklasvh/base64-arraybuffer>\n * Copyright (c) 2021 Niklas von Hertzen <https://hertzen.com>\n * Released under MIT License\n */\nvar chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/';\n// Use a lookup table to find the index.\nvar lookup = typeof Uint8Array === 'undefined' ? [] : new Uint8Array(256);\nfor (var i = 0; i < chars.length; i++) {\n    lookup[chars.charCodeAt(i)] = i;\n}\nvar encode = function (arraybuffer) {\n    var bytes = new Uint8Array(arraybuffer), i, len = bytes.length, base64 = '';\n    for (i = 0; i < len; i += 3) {\n        base64 += chars[bytes[i] >> 2];\n        base64 += chars[((bytes[i] & 3) << 4) | (bytes[i + 1] >> 4)];\n        base64 += chars[((bytes[i + 1] & 15) << 2) | (bytes[i + 2] >> 6)];\n        base64 += chars[bytes[i + 2] & 63];\n    }\n    if (len % 3 === 2) {\n        base64 = base64.substring(0, base64.length - 1) + '=';\n    }\n    else if (len % 3 === 1) {\n        base64 = base64.substring(0, base64.length - 2) + '==';\n    }\n    return base64;\n};\nvar decode = function (base64) {\n    var bufferLength = base64.length * 0.75, len = base64.length, i, p = 0, encoded1, encoded2, encoded3, encoded4;\n    if (base64[base64.length - 1] === '=') {\n        bufferLength--;\n        if (base64[base64.length - 2] === '=') {\n            bufferLength--;\n        }\n    }\n    var arraybuffer = new ArrayBuffer(bufferLength), bytes = new Uint8Array(arraybuffer);\n    for (i = 0; i < len; i += 4) {\n        encoded1 = lookup[base64.charCodeAt(i)];\n        encoded2 = lookup[base64.charCodeAt(i + 1)];\n        encoded3 = lookup[base64.charCodeAt(i + 2)];\n        encoded4 = lookup[base64.charCodeAt(i + 3)];\n        bytes[p++] = (encoded1 << 2) | (encoded2 >> 4);\n        bytes[p++] = ((encoded2 & 15) << 4) | (encoded3 >> 2);\n        bytes[p++] = ((encoded3 & 3) << 6) | (encoded4 & 63);\n    }\n    return arraybuffer;\n};\n\nexport { decode, encode };\n//# sourceMappingURL=base64-arraybuffer.es5.js.map\n","import { PACKET_TYPES } from \"./commons.js\";\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        Object.prototype.toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\n// ArrayBuffer.isView method is not defined in IE10\nconst isView = obj => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj && obj.buffer instanceof ArrayBuffer;\n};\nconst encodePacket = ({ type, data }, supportsBinary, callback) => {\n    if (withNativeBlob && data instanceof Blob) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(data, callback);\n        }\n    }\n    else if (withNativeArrayBuffer &&\n        (data instanceof ArrayBuffer || isView(data))) {\n        if (supportsBinary) {\n            return callback(data);\n        }\n        else {\n            return encodeBlobAsBase64(new Blob([data]), callback);\n        }\n    }\n    // plain string\n    return callback(PACKET_TYPES[type] + (data || \"\"));\n};\nconst encodeBlobAsBase64 = (data, callback) => {\n    const fileReader = new FileReader();\n    fileReader.onload = function () {\n        const content = fileReader.result.split(\",\")[1];\n        callback(\"b\" + content);\n    };\n    return fileReader.readAsDataURL(data);\n};\nexport default encodePacket;\n","'use strict';\n\nvar alphabet = '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz-_'.split('')\n  , length = 64\n  , map = {}\n  , seed = 0\n  , i = 0\n  , prev;\n\n/**\n * Return a string representing the specified number.\n *\n * @param {Number} num The number to convert.\n * @returns {String} The string representation of the number.\n * @api public\n */\nfunction encode(num) {\n  var encoded = '';\n\n  do {\n    encoded = alphabet[num % length] + encoded;\n    num = Math.floor(num / length);\n  } while (num > 0);\n\n  return encoded;\n}\n\n/**\n * Return the integer value specified by the given string.\n *\n * @param {String} str The string to convert.\n * @returns {Number} The integer value represented by the string.\n * @api public\n */\nfunction decode(str) {\n  var decoded = 0;\n\n  for (i = 0; i < str.length; i++) {\n    decoded = decoded * length + map[str.charAt(i)];\n  }\n\n  return decoded;\n}\n\n/**\n * Yeast: A tiny growing id generator.\n *\n * @returns {String} A unique id.\n * @api public\n */\nfunction yeast() {\n  var now = encode(+new Date());\n\n  if (now !== prev) return seed = 0, prev = now;\n  return now +'.'+ encode(seed++);\n}\n\n//\n// Map each character to its index.\n//\nfor (; i < length; i++) map[alphabet[i]] = i;\n\n//\n// Expose the `yeast`, `encode` and `decode` functions.\n//\nyeast.encode = encode;\nyeast.decode = decode;\nmodule.exports = yeast;\n","import { ERROR_PACKET, PACKET_TYPES_REVERSE } from \"./commons.js\";\nimport { decode } from \"base64-arraybuffer\";\nconst withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst decodePacket = (encodedPacket, binaryType) => {\n    if (typeof encodedPacket !== \"string\") {\n        return {\n            type: \"message\",\n            data: mapBinary(encodedPacket, binaryType)\n        };\n    }\n    const type = encodedPacket.charAt(0);\n    if (type === \"b\") {\n        return {\n            type: \"message\",\n            data: decodeBase64Packet(encodedPacket.substring(1), binaryType)\n        };\n    }\n    const packetType = PACKET_TYPES_REVERSE[type];\n    if (!packetType) {\n        return ERROR_PACKET;\n    }\n    return encodedPacket.length > 1\n        ? {\n            type: PACKET_TYPES_REVERSE[type],\n            data: encodedPacket.substring(1)\n        }\n        : {\n            type: PACKET_TYPES_REVERSE[type]\n        };\n};\nconst decodeBase64Packet = (data, binaryType) => {\n    if (withNativeArrayBuffer) {\n        const decoded = decode(data);\n        return mapBinary(decoded, binaryType);\n    }\n    else {\n        return { base64: true, data }; // fallback for old browsers\n    }\n};\nconst mapBinary = (data, binaryType) => {\n    switch (binaryType) {\n        case \"blob\":\n            return data instanceof ArrayBuffer ? new Blob([data]) : data;\n        case \"arraybuffer\":\n        default:\n            return data; // assuming the data is already an ArrayBuffer\n    }\n};\nexport default decodePacket;\n","import encodePacket from \"./encodePacket.js\";\nimport decodePacket from \"./decodePacket.js\";\nconst SEPARATOR = String.fromCharCode(30); // see https://en.wikipedia.org/wiki/Delimiter#ASCII_delimited_text\nconst encodePayload = (packets, callback) => {\n    // some packets may be added to the array while encoding, so the initial length must be saved\n    const length = packets.length;\n    const encodedPackets = new Array(length);\n    let count = 0;\n    packets.forEach((packet, i) => {\n        // force base64 encoding for binary packets\n        encodePacket(packet, false, encodedPacket => {\n            encodedPackets[i] = encodedPacket;\n            if (++count === length) {\n                callback(encodedPackets.join(SEPARATOR));\n            }\n        });\n    });\n};\nconst decodePayload = (encodedPayload, binaryType) => {\n    const encodedPackets = encodedPayload.split(SEPARATOR);\n    const packets = [];\n    for (let i = 0; i < encodedPackets.length; i++) {\n        const decodedPacket = decodePacket(encodedPackets[i], binaryType);\n        packets.push(decodedPacket);\n        if (decodedPacket.type === \"error\") {\n            break;\n        }\n    }\n    return packets;\n};\nexport const protocol = 4;\nexport { encodePacket, encodePayload, decodePacket, decodePayload };\n","import { decodePacket } from \"engine.io-parser\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { installTimerFunctions } from \"./util.js\";\nexport class Transport extends Emitter {\n    /**\n     * Transport abstract constructor.\n     *\n     * @param {Object} options.\n     * @api private\n     */\n    constructor(opts) {\n        super();\n        this.writable = false;\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.query = opts.query;\n        this.readyState = \"\";\n        this.socket = opts.socket;\n    }\n    /**\n     * Emits an error.\n     *\n     * @param {String} str\n     * @return {Transport} for chaining\n     * @api protected\n     */\n    onError(msg, desc) {\n        const err = new Error(msg);\n        // @ts-ignore\n        err.type = \"TransportError\";\n        // @ts-ignore\n        err.description = desc;\n        super.emit(\"error\", err);\n        return this;\n    }\n    /**\n     * Opens the transport.\n     *\n     * @api public\n     */\n    open() {\n        if (\"closed\" === this.readyState || \"\" === this.readyState) {\n            this.readyState = \"opening\";\n            this.doOpen();\n        }\n        return this;\n    }\n    /**\n     * Closes the transport.\n     *\n     * @api public\n     */\n    close() {\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.doClose();\n            this.onClose();\n        }\n        return this;\n    }\n    /**\n     * Sends multiple packets.\n     *\n     * @param {Array} packets\n     * @api public\n     */\n    send(packets) {\n        if (\"open\" === this.readyState) {\n            this.write(packets);\n        }\n        else {\n            // this might happen if the transport was silently closed in the beforeunload event handler\n        }\n    }\n    /**\n     * Called upon open\n     *\n     * @api protected\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        this.writable = true;\n        super.emit(\"open\");\n    }\n    /**\n     * Called with data.\n     *\n     * @param {String} data\n     * @api protected\n     */\n    onData(data) {\n        const packet = decodePacket(data, this.socket.binaryType);\n        this.onPacket(packet);\n    }\n    /**\n     * Called with a decoded packet.\n     *\n     * @api protected\n     */\n    onPacket(packet) {\n        super.emit(\"packet\", packet);\n    }\n    /**\n     * Called upon close.\n     *\n     * @api protected\n     */\n    onClose() {\n        this.readyState = \"closed\";\n        super.emit(\"close\");\n    }\n}\n","/**\n * Compiles a querystring\n * Returns string representation of the object\n *\n * @param {Object}\n * @api private\n */\n\nexports.encode = function (obj) {\n  var str = '';\n\n  for (var i in obj) {\n    if (obj.hasOwnProperty(i)) {\n      if (str.length) str += '&';\n      str += encodeURIComponent(i) + '=' + encodeURIComponent(obj[i]);\n    }\n  }\n\n  return str;\n};\n\n/**\n * Parses a simple querystring into an object\n *\n * @param {String} qs\n * @api private\n */\n\nexports.decode = function(qs){\n  var qry = {};\n  var pairs = qs.split('&');\n  for (var i = 0, l = pairs.length; i < l; i++) {\n    var pair = pairs[i].split('=');\n    qry[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1]);\n  }\n  return qry;\n};\n","import { Transport } from \"../transport.js\";\nimport yeast from \"yeast\";\nimport parseqs from \"parseqs\";\nimport { encodePayload, decodePayload } from \"engine.io-parser\";\nexport class Polling extends Transport {\n    constructor() {\n        super(...arguments);\n        this.polling = false;\n    }\n    /**\n     * Transport name.\n     */\n    get name() {\n        return \"polling\";\n    }\n    /**\n     * Opens the socket (triggers polling). We write a PING message to determine\n     * when the transport is open.\n     *\n     * @api private\n     */\n    doOpen() {\n        this.poll();\n    }\n    /**\n     * Pauses polling.\n     *\n     * @param {Function} callback upon buffers are flushed and transport is paused\n     * @api private\n     */\n    pause(onPause) {\n        this.readyState = \"pausing\";\n        const pause = () => {\n            this.readyState = \"paused\";\n            onPause();\n        };\n        if (this.polling || !this.writable) {\n            let total = 0;\n            if (this.polling) {\n                total++;\n                this.once(\"pollComplete\", function () {\n                    --total || pause();\n                });\n            }\n            if (!this.writable) {\n                total++;\n                this.once(\"drain\", function () {\n                    --total || pause();\n                });\n            }\n        }\n        else {\n            pause();\n        }\n    }\n    /**\n     * Starts polling cycle.\n     *\n     * @api public\n     */\n    poll() {\n        this.polling = true;\n        this.doPoll();\n        this.emit(\"poll\");\n    }\n    /**\n     * Overloads onData to detect payloads.\n     *\n     * @api private\n     */\n    onData(data) {\n        const callback = packet => {\n            // if its the first message we consider the transport open\n            if (\"opening\" === this.readyState && packet.type === \"open\") {\n                this.onOpen();\n            }\n            // if its a close packet, we close the ongoing requests\n            if (\"close\" === packet.type) {\n                this.onClose();\n                return false;\n            }\n            // otherwise bypass onData and handle the message\n            this.onPacket(packet);\n        };\n        // decode payload\n        decodePayload(data, this.socket.binaryType).forEach(callback);\n        // if an event did not trigger closing\n        if (\"closed\" !== this.readyState) {\n            // if we got data we're not polling\n            this.polling = false;\n            this.emit(\"pollComplete\");\n            if (\"open\" === this.readyState) {\n                this.poll();\n            }\n            else {\n            }\n        }\n    }\n    /**\n     * For polling, send a close packet.\n     *\n     * @api private\n     */\n    doClose() {\n        const close = () => {\n            this.write([{ type: \"close\" }]);\n        };\n        if (\"open\" === this.readyState) {\n            close();\n        }\n        else {\n            // in case we're trying to close while\n            // handshaking is in progress (GH-164)\n            this.once(\"open\", close);\n        }\n    }\n    /**\n     * Writes a packets payload.\n     *\n     * @param {Array} data packets\n     * @param {Function} drain callback\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        encodePayload(packets, data => {\n            this.doWrite(data, () => {\n                this.writable = true;\n                this.emit(\"drain\");\n            });\n        });\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"https\" : \"http\";\n        let port = \"\";\n        // cache busting is forced\n        if (false !== this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        if (!this.supportsBinary && !query.sid) {\n            query.b64 = 1;\n        }\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"https\" === schema && Number(this.opts.port) !== 443) ||\n                (\"http\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n}\n","/* global attachEvent */\nimport XMLHttpRequest from \"./xmlhttprequest.js\";\nimport globalThis from \"../globalThis.js\";\nimport { installTimerFunctions, pick } from \"../util.js\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { Polling } from \"./polling.js\";\n/**\n * Empty function\n */\nfunction empty() { }\nconst hasXHR2 = (function () {\n    const xhr = new XMLHttpRequest({\n        xdomain: false\n    });\n    return null != xhr.responseType;\n})();\nexport class XHR extends Polling {\n    /**\n     * XHR Polling constructor.\n     *\n     * @param {Object} opts\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        if (typeof location !== \"undefined\") {\n            const isSSL = \"https:\" === location.protocol;\n            let port = location.port;\n            // some user agents have empty `location.port`\n            if (!port) {\n                port = isSSL ? \"443\" : \"80\";\n            }\n            this.xd =\n                (typeof location !== \"undefined\" &&\n                    opts.hostname !== location.hostname) ||\n                    port !== opts.port;\n            this.xs = opts.secure !== isSSL;\n        }\n        /**\n         * XHR supports binary\n         */\n        const forceBase64 = opts && opts.forceBase64;\n        this.supportsBinary = hasXHR2 && !forceBase64;\n    }\n    /**\n     * Creates a request.\n     *\n     * @param {String} method\n     * @api private\n     */\n    request(opts = {}) {\n        Object.assign(opts, { xd: this.xd, xs: this.xs }, this.opts);\n        return new Request(this.uri(), opts);\n    }\n    /**\n     * Sends data.\n     *\n     * @param {String} data to send.\n     * @param {Function} called upon flush.\n     * @api private\n     */\n    doWrite(data, fn) {\n        const req = this.request({\n            method: \"POST\",\n            data: data\n        });\n        req.on(\"success\", fn);\n        req.on(\"error\", err => {\n            this.onError(\"xhr post error\", err);\n        });\n    }\n    /**\n     * Starts a poll cycle.\n     *\n     * @api private\n     */\n    doPoll() {\n        const req = this.request();\n        req.on(\"data\", this.onData.bind(this));\n        req.on(\"error\", err => {\n            this.onError(\"xhr poll error\", err);\n        });\n        this.pollXhr = req;\n    }\n}\nexport class Request extends Emitter {\n    /**\n     * Request constructor\n     *\n     * @param {Object} options\n     * @api public\n     */\n    constructor(uri, opts) {\n        super();\n        installTimerFunctions(this, opts);\n        this.opts = opts;\n        this.method = opts.method || \"GET\";\n        this.uri = uri;\n        this.async = false !== opts.async;\n        this.data = undefined !== opts.data ? opts.data : null;\n        this.create();\n    }\n    /**\n     * Creates the XHR object and sends the request.\n     *\n     * @api private\n     */\n    create() {\n        const opts = pick(this.opts, \"agent\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"autoUnref\");\n        opts.xdomain = !!this.opts.xd;\n        opts.xscheme = !!this.opts.xs;\n        const xhr = (this.xhr = new XMLHttpRequest(opts));\n        try {\n            xhr.open(this.method, this.uri, this.async);\n            try {\n                if (this.opts.extraHeaders) {\n                    xhr.setDisableHeaderCheck && xhr.setDisableHeaderCheck(true);\n                    for (let i in this.opts.extraHeaders) {\n                        if (this.opts.extraHeaders.hasOwnProperty(i)) {\n                            xhr.setRequestHeader(i, this.opts.extraHeaders[i]);\n                        }\n                    }\n                }\n            }\n            catch (e) { }\n            if (\"POST\" === this.method) {\n                try {\n                    xhr.setRequestHeader(\"Content-type\", \"text/plain;charset=UTF-8\");\n                }\n                catch (e) { }\n            }\n            try {\n                xhr.setRequestHeader(\"Accept\", \"*/*\");\n            }\n            catch (e) { }\n            // ie6 check\n            if (\"withCredentials\" in xhr) {\n                xhr.withCredentials = this.opts.withCredentials;\n            }\n            if (this.opts.requestTimeout) {\n                xhr.timeout = this.opts.requestTimeout;\n            }\n            xhr.onreadystatechange = () => {\n                if (4 !== xhr.readyState)\n                    return;\n                if (200 === xhr.status || 1223 === xhr.status) {\n                    this.onLoad();\n                }\n                else {\n                    // make sure the `error` event handler that's user-set\n                    // does not throw in the same tick and gets caught here\n                    this.setTimeoutFn(() => {\n                        this.onError(typeof xhr.status === \"number\" ? xhr.status : 0);\n                    }, 0);\n                }\n            };\n            xhr.send(this.data);\n        }\n        catch (e) {\n            // Need to defer since .create() is called directly from the constructor\n            // and thus the 'error' event can only be only bound *after* this exception\n            // occurs.  Therefore, also, we cannot throw here at all.\n            this.setTimeoutFn(() => {\n                this.onError(e);\n            }, 0);\n            return;\n        }\n        if (typeof document !== \"undefined\") {\n            this.index = Request.requestsCount++;\n            Request.requests[this.index] = this;\n        }\n    }\n    /**\n     * Called upon successful response.\n     *\n     * @api private\n     */\n    onSuccess() {\n        this.emit(\"success\");\n        this.cleanup();\n    }\n    /**\n     * Called if we have data.\n     *\n     * @api private\n     */\n    onData(data) {\n        this.emit(\"data\", data);\n        this.onSuccess();\n    }\n    /**\n     * Called upon error.\n     *\n     * @api private\n     */\n    onError(err) {\n        this.emit(\"error\", err);\n        this.cleanup(true);\n    }\n    /**\n     * Cleans up house.\n     *\n     * @api private\n     */\n    cleanup(fromError) {\n        if (\"undefined\" === typeof this.xhr || null === this.xhr) {\n            return;\n        }\n        this.xhr.onreadystatechange = empty;\n        if (fromError) {\n            try {\n                this.xhr.abort();\n            }\n            catch (e) { }\n        }\n        if (typeof document !== \"undefined\") {\n            delete Request.requests[this.index];\n        }\n        this.xhr = null;\n    }\n    /**\n     * Called upon load.\n     *\n     * @api private\n     */\n    onLoad() {\n        const data = this.xhr.responseText;\n        if (data !== null) {\n            this.onData(data);\n        }\n    }\n    /**\n     * Aborts the request.\n     *\n     * @api public\n     */\n    abort() {\n        this.cleanup();\n    }\n}\nRequest.requestsCount = 0;\nRequest.requests = {};\n/**\n * Aborts pending requests when unloading the window. This is needed to prevent\n * memory leaks (e.g. when using IE) and to ensure that no spurious error is\n * emitted.\n */\nif (typeof document !== \"undefined\") {\n    // @ts-ignore\n    if (typeof attachEvent === \"function\") {\n        // @ts-ignore\n        attachEvent(\"onunload\", unloadHandler);\n    }\n    else if (typeof addEventListener === \"function\") {\n        const terminationEvent = \"onpagehide\" in globalThis ? \"pagehide\" : \"unload\";\n        addEventListener(terminationEvent, unloadHandler, false);\n    }\n}\nfunction unloadHandler() {\n    for (let i in Request.requests) {\n        if (Request.requests.hasOwnProperty(i)) {\n            Request.requests[i].abort();\n        }\n    }\n}\n","import globalThis from \"../globalThis.js\";\nexport const nextTick = (() => {\n    const isPromiseAvailable = typeof Promise === \"function\" && typeof Promise.resolve === \"function\";\n    if (isPromiseAvailable) {\n        return cb => Promise.resolve().then(cb);\n    }\n    else {\n        return (cb, setTimeoutFn) => setTimeoutFn(cb, 0);\n    }\n})();\nexport const WebSocket = globalThis.WebSocket || globalThis.MozWebSocket;\nexport const usingBrowserWebSocket = true;\nexport const defaultBinaryType = \"arraybuffer\";\n","import { Transport } from \"../transport.js\";\nimport parseqs from \"parseqs\";\nimport yeast from \"yeast\";\nimport { pick } from \"../util.js\";\nimport { defaultBinaryType, nextTick, usingBrowserWebSocket, WebSocket } from \"./websocket-constructor.js\";\nimport { encodePacket } from \"engine.io-parser\";\n// detect ReactNative environment\nconst isReactNative = typeof navigator !== \"undefined\" &&\n    typeof navigator.product === \"string\" &&\n    navigator.product.toLowerCase() === \"reactnative\";\nexport class WS extends Transport {\n    /**\n     * WebSocket transport constructor.\n     *\n     * @api {Object} connection options\n     * @api public\n     */\n    constructor(opts) {\n        super(opts);\n        this.supportsBinary = !opts.forceBase64;\n    }\n    /**\n     * Transport name.\n     *\n     * @api public\n     */\n    get name() {\n        return \"websocket\";\n    }\n    /**\n     * Opens socket.\n     *\n     * @api private\n     */\n    doOpen() {\n        if (!this.check()) {\n            // let probe timeout\n            return;\n        }\n        const uri = this.uri();\n        const protocols = this.opts.protocols;\n        // React Native only supports the 'headers' option, and will print a warning if anything else is passed\n        const opts = isReactNative\n            ? {}\n            : pick(this.opts, \"agent\", \"perMessageDeflate\", \"pfx\", \"key\", \"passphrase\", \"cert\", \"ca\", \"ciphers\", \"rejectUnauthorized\", \"localAddress\", \"protocolVersion\", \"origin\", \"maxPayload\", \"family\", \"checkServerIdentity\");\n        if (this.opts.extraHeaders) {\n            opts.headers = this.opts.extraHeaders;\n        }\n        try {\n            this.ws =\n                usingBrowserWebSocket && !isReactNative\n                    ? protocols\n                        ? new WebSocket(uri, protocols)\n                        : new WebSocket(uri)\n                    : new WebSocket(uri, protocols, opts);\n        }\n        catch (err) {\n            return this.emit(\"error\", err);\n        }\n        this.ws.binaryType = this.socket.binaryType || defaultBinaryType;\n        this.addEventListeners();\n    }\n    /**\n     * Adds event listeners to the socket\n     *\n     * @api private\n     */\n    addEventListeners() {\n        this.ws.onopen = () => {\n            if (this.opts.autoUnref) {\n                this.ws._socket.unref();\n            }\n            this.onOpen();\n        };\n        this.ws.onclose = this.onClose.bind(this);\n        this.ws.onmessage = ev => this.onData(ev.data);\n        this.ws.onerror = e => this.onError(\"websocket error\", e);\n    }\n    /**\n     * Writes data to socket.\n     *\n     * @param {Array} array of packets.\n     * @api private\n     */\n    write(packets) {\n        this.writable = false;\n        // encodePacket efficient as it uses WS framing\n        // no need for encodePayload\n        for (let i = 0; i < packets.length; i++) {\n            const packet = packets[i];\n            const lastPacket = i === packets.length - 1;\n            encodePacket(packet, this.supportsBinary, data => {\n                // always create a new object (GH-437)\n                const opts = {};\n                if (!usingBrowserWebSocket) {\n                    if (packet.options) {\n                        opts.compress = packet.options.compress;\n                    }\n                    if (this.opts.perMessageDeflate) {\n                        const len = \"string\" === typeof data ? Buffer.byteLength(data) : data.length;\n                        if (len < this.opts.perMessageDeflate.threshold) {\n                            opts.compress = false;\n                        }\n                    }\n                }\n                // Sometimes the websocket has already been closed but the browser didn't\n                // have a chance of informing us about it yet, in that case send will\n                // throw an error\n                try {\n                    if (usingBrowserWebSocket) {\n                        // TypeError is thrown when passing the second argument on Safari\n                        this.ws.send(data);\n                    }\n                    else {\n                        this.ws.send(data, opts);\n                    }\n                }\n                catch (e) {\n                }\n                if (lastPacket) {\n                    // fake drain\n                    // defer to next tick to allow Socket to clear writeBuffer\n                    nextTick(() => {\n                        this.writable = true;\n                        this.emit(\"drain\");\n                    }, this.setTimeoutFn);\n                }\n            });\n        }\n    }\n    /**\n     * Closes socket.\n     *\n     * @api private\n     */\n    doClose() {\n        if (typeof this.ws !== \"undefined\") {\n            this.ws.close();\n            this.ws = null;\n        }\n    }\n    /**\n     * Generates uri for connection.\n     *\n     * @api private\n     */\n    uri() {\n        let query = this.query || {};\n        const schema = this.opts.secure ? \"wss\" : \"ws\";\n        let port = \"\";\n        // avoid port if default for schema\n        if (this.opts.port &&\n            ((\"wss\" === schema && Number(this.opts.port) !== 443) ||\n                (\"ws\" === schema && Number(this.opts.port) !== 80))) {\n            port = \":\" + this.opts.port;\n        }\n        // append timestamp to URI\n        if (this.opts.timestampRequests) {\n            query[this.opts.timestampParam] = yeast();\n        }\n        // communicate binary support capabilities\n        if (!this.supportsBinary) {\n            query.b64 = 1;\n        }\n        const encodedQuery = parseqs.encode(query);\n        const ipv6 = this.opts.hostname.indexOf(\":\") !== -1;\n        return (schema +\n            \"://\" +\n            (ipv6 ? \"[\" + this.opts.hostname + \"]\" : this.opts.hostname) +\n            port +\n            this.opts.path +\n            (encodedQuery.length ? \"?\" + encodedQuery : \"\"));\n    }\n    /**\n     * Feature detection for WebSocket.\n     *\n     * @return {Boolean} whether this transport is available.\n     * @api public\n     */\n    check() {\n        return (!!WebSocket &&\n            !(\"__initialize\" in WebSocket && this.name === WS.prototype.name));\n    }\n}\n","import { XHR } from \"./polling-xhr.js\";\nimport { WS } from \"./websocket.js\";\nexport const transports = {\n    websocket: WS,\n    polling: XHR\n};\n","import { transports } from \"./transports/index.js\";\nimport { installTimerFunctions } from \"./util.js\";\nimport parseqs from \"parseqs\";\nimport parseuri from \"parseuri\";\nimport { Emitter } from \"@socket.io/component-emitter\";\nimport { protocol } from \"engine.io-parser\";\nexport class Socket extends Emitter {\n    /**\n     * Socket constructor.\n     *\n     * @param {String|Object} uri or options\n     * @param {Object} opts - options\n     * @api public\n     */\n    constructor(uri, opts = {}) {\n        super();\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = null;\n        }\n        if (uri) {\n            uri = parseuri(uri);\n            opts.hostname = uri.host;\n            opts.secure = uri.protocol === \"https\" || uri.protocol === \"wss\";\n            opts.port = uri.port;\n            if (uri.query)\n                opts.query = uri.query;\n        }\n        else if (opts.host) {\n            opts.hostname = parseuri(opts.host).host;\n        }\n        installTimerFunctions(this, opts);\n        this.secure =\n            null != opts.secure\n                ? opts.secure\n                : typeof location !== \"undefined\" && \"https:\" === location.protocol;\n        if (opts.hostname && !opts.port) {\n            // if no port is specified manually, use the protocol default\n            opts.port = this.secure ? \"443\" : \"80\";\n        }\n        this.hostname =\n            opts.hostname ||\n                (typeof location !== \"undefined\" ? location.hostname : \"localhost\");\n        this.port =\n            opts.port ||\n                (typeof location !== \"undefined\" && location.port\n                    ? location.port\n                    : this.secure\n                        ? \"443\"\n                        : \"80\");\n        this.transports = opts.transports || [\"polling\", \"websocket\"];\n        this.readyState = \"\";\n        this.writeBuffer = [];\n        this.prevBufferLen = 0;\n        this.opts = Object.assign({\n            path: \"/engine.io\",\n            agent: false,\n            withCredentials: false,\n            upgrade: true,\n            timestampParam: \"t\",\n            rememberUpgrade: false,\n            rejectUnauthorized: true,\n            perMessageDeflate: {\n                threshold: 1024\n            },\n            transportOptions: {},\n            closeOnBeforeunload: true\n        }, opts);\n        this.opts.path = this.opts.path.replace(/\\/$/, \"\") + \"/\";\n        if (typeof this.opts.query === \"string\") {\n            this.opts.query = parseqs.decode(this.opts.query);\n        }\n        // set on handshake\n        this.id = null;\n        this.upgrades = null;\n        this.pingInterval = null;\n        this.pingTimeout = null;\n        // set on heartbeat\n        this.pingTimeoutTimer = null;\n        if (typeof addEventListener === \"function\") {\n            if (this.opts.closeOnBeforeunload) {\n                // Firefox closes the connection when the \"beforeunload\" event is emitted but not Chrome. This event listener\n                // ensures every browser behaves the same (no \"disconnect\" event at the Socket.IO level when the page is\n                // closed/reloaded)\n                addEventListener(\"beforeunload\", () => {\n                    if (this.transport) {\n                        // silently close the transport\n                        this.transport.removeAllListeners();\n                        this.transport.close();\n                    }\n                }, false);\n            }\n            if (this.hostname !== \"localhost\") {\n                this.offlineEventListener = () => {\n                    this.onClose(\"transport close\");\n                };\n                addEventListener(\"offline\", this.offlineEventListener, false);\n            }\n        }\n        this.open();\n    }\n    /**\n     * Creates transport of the given type.\n     *\n     * @param {String} transport name\n     * @return {Transport}\n     * @api private\n     */\n    createTransport(name) {\n        const query = clone(this.opts.query);\n        // append engine.io protocol identifier\n        query.EIO = protocol;\n        // transport name\n        query.transport = name;\n        // session id if we already have one\n        if (this.id)\n            query.sid = this.id;\n        const opts = Object.assign({}, this.opts.transportOptions[name], this.opts, {\n            query,\n            socket: this,\n            hostname: this.hostname,\n            secure: this.secure,\n            port: this.port\n        });\n        return new transports[name](opts);\n    }\n    /**\n     * Initializes transport to use and starts probe.\n     *\n     * @api private\n     */\n    open() {\n        let transport;\n        if (this.opts.rememberUpgrade &&\n            Socket.priorWebsocketSuccess &&\n            this.transports.indexOf(\"websocket\") !== -1) {\n            transport = \"websocket\";\n        }\n        else if (0 === this.transports.length) {\n            // Emit error on next tick so it can be listened to\n            this.setTimeoutFn(() => {\n                this.emitReserved(\"error\", \"No transports available\");\n            }, 0);\n            return;\n        }\n        else {\n            transport = this.transports[0];\n        }\n        this.readyState = \"opening\";\n        // Retry with the next transport if the transport is disabled (jsonp: false)\n        try {\n            transport = this.createTransport(transport);\n        }\n        catch (e) {\n            this.transports.shift();\n            this.open();\n            return;\n        }\n        transport.open();\n        this.setTransport(transport);\n    }\n    /**\n     * Sets the current transport. Disables the existing one (if any).\n     *\n     * @api private\n     */\n    setTransport(transport) {\n        if (this.transport) {\n            this.transport.removeAllListeners();\n        }\n        // set up transport\n        this.transport = transport;\n        // set up transport listeners\n        transport\n            .on(\"drain\", this.onDrain.bind(this))\n            .on(\"packet\", this.onPacket.bind(this))\n            .on(\"error\", this.onError.bind(this))\n            .on(\"close\", () => {\n            this.onClose(\"transport close\");\n        });\n    }\n    /**\n     * Probes a transport.\n     *\n     * @param {String} transport name\n     * @api private\n     */\n    probe(name) {\n        let transport = this.createTransport(name);\n        let failed = false;\n        Socket.priorWebsocketSuccess = false;\n        const onTransportOpen = () => {\n            if (failed)\n                return;\n            transport.send([{ type: \"ping\", data: \"probe\" }]);\n            transport.once(\"packet\", msg => {\n                if (failed)\n                    return;\n                if (\"pong\" === msg.type && \"probe\" === msg.data) {\n                    this.upgrading = true;\n                    this.emitReserved(\"upgrading\", transport);\n                    if (!transport)\n                        return;\n                    Socket.priorWebsocketSuccess = \"websocket\" === transport.name;\n                    this.transport.pause(() => {\n                        if (failed)\n                            return;\n                        if (\"closed\" === this.readyState)\n                            return;\n                        cleanup();\n                        this.setTransport(transport);\n                        transport.send([{ type: \"upgrade\" }]);\n                        this.emitReserved(\"upgrade\", transport);\n                        transport = null;\n                        this.upgrading = false;\n                        this.flush();\n                    });\n                }\n                else {\n                    const err = new Error(\"probe error\");\n                    // @ts-ignore\n                    err.transport = transport.name;\n                    this.emitReserved(\"upgradeError\", err);\n                }\n            });\n        };\n        function freezeTransport() {\n            if (failed)\n                return;\n            // Any callback called by transport should be ignored since now\n            failed = true;\n            cleanup();\n            transport.close();\n            transport = null;\n        }\n        // Handle any error that happens while probing\n        const onerror = err => {\n            const error = new Error(\"probe error: \" + err);\n            // @ts-ignore\n            error.transport = transport.name;\n            freezeTransport();\n            this.emitReserved(\"upgradeError\", error);\n        };\n        function onTransportClose() {\n            onerror(\"transport closed\");\n        }\n        // When the socket is closed while we're probing\n        function onclose() {\n            onerror(\"socket closed\");\n        }\n        // When the socket is upgraded while we're probing\n        function onupgrade(to) {\n            if (transport && to.name !== transport.name) {\n                freezeTransport();\n            }\n        }\n        // Remove all listeners on the transport and on self\n        const cleanup = () => {\n            transport.removeListener(\"open\", onTransportOpen);\n            transport.removeListener(\"error\", onerror);\n            transport.removeListener(\"close\", onTransportClose);\n            this.off(\"close\", onclose);\n            this.off(\"upgrading\", onupgrade);\n        };\n        transport.once(\"open\", onTransportOpen);\n        transport.once(\"error\", onerror);\n        transport.once(\"close\", onTransportClose);\n        this.once(\"close\", onclose);\n        this.once(\"upgrading\", onupgrade);\n        transport.open();\n    }\n    /**\n     * Called when connection is deemed open.\n     *\n     * @api private\n     */\n    onOpen() {\n        this.readyState = \"open\";\n        Socket.priorWebsocketSuccess = \"websocket\" === this.transport.name;\n        this.emitReserved(\"open\");\n        this.flush();\n        // we check for `readyState` in case an `open`\n        // listener already closed the socket\n        if (\"open\" === this.readyState &&\n            this.opts.upgrade &&\n            this.transport.pause) {\n            let i = 0;\n            const l = this.upgrades.length;\n            for (; i < l; i++) {\n                this.probe(this.upgrades[i]);\n            }\n        }\n    }\n    /**\n     * Handles a packet.\n     *\n     * @api private\n     */\n    onPacket(packet) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            this.emitReserved(\"packet\", packet);\n            // Socket is live - any packet counts\n            this.emitReserved(\"heartbeat\");\n            switch (packet.type) {\n                case \"open\":\n                    this.onHandshake(JSON.parse(packet.data));\n                    break;\n                case \"ping\":\n                    this.resetPingTimeout();\n                    this.sendPacket(\"pong\");\n                    this.emitReserved(\"ping\");\n                    this.emitReserved(\"pong\");\n                    break;\n                case \"error\":\n                    const err = new Error(\"server error\");\n                    // @ts-ignore\n                    err.code = packet.data;\n                    this.onError(err);\n                    break;\n                case \"message\":\n                    this.emitReserved(\"data\", packet.data);\n                    this.emitReserved(\"message\", packet.data);\n                    break;\n            }\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon handshake completion.\n     *\n     * @param {Object} data - handshake obj\n     * @api private\n     */\n    onHandshake(data) {\n        this.emitReserved(\"handshake\", data);\n        this.id = data.sid;\n        this.transport.query.sid = data.sid;\n        this.upgrades = this.filterUpgrades(data.upgrades);\n        this.pingInterval = data.pingInterval;\n        this.pingTimeout = data.pingTimeout;\n        this.onOpen();\n        // In case open handler closes socket\n        if (\"closed\" === this.readyState)\n            return;\n        this.resetPingTimeout();\n    }\n    /**\n     * Sets and resets ping timeout timer based on server pings.\n     *\n     * @api private\n     */\n    resetPingTimeout() {\n        this.clearTimeoutFn(this.pingTimeoutTimer);\n        this.pingTimeoutTimer = this.setTimeoutFn(() => {\n            this.onClose(\"ping timeout\");\n        }, this.pingInterval + this.pingTimeout);\n        if (this.opts.autoUnref) {\n            this.pingTimeoutTimer.unref();\n        }\n    }\n    /**\n     * Called on `drain` event\n     *\n     * @api private\n     */\n    onDrain() {\n        this.writeBuffer.splice(0, this.prevBufferLen);\n        // setting prevBufferLen = 0 is very important\n        // for example, when upgrading, upgrade packet is sent over,\n        // and a nonzero prevBufferLen could cause problems on `drain`\n        this.prevBufferLen = 0;\n        if (0 === this.writeBuffer.length) {\n            this.emitReserved(\"drain\");\n        }\n        else {\n            this.flush();\n        }\n    }\n    /**\n     * Flush write buffers.\n     *\n     * @api private\n     */\n    flush() {\n        if (\"closed\" !== this.readyState &&\n            this.transport.writable &&\n            !this.upgrading &&\n            this.writeBuffer.length) {\n            this.transport.send(this.writeBuffer);\n            // keep track of current length of writeBuffer\n            // splice writeBuffer and callbackBuffer on `drain`\n            this.prevBufferLen = this.writeBuffer.length;\n            this.emitReserved(\"flush\");\n        }\n    }\n    /**\n     * Sends a message.\n     *\n     * @param {String} message.\n     * @param {Function} callback function.\n     * @param {Object} options.\n     * @return {Socket} for chaining.\n     * @api public\n     */\n    write(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    send(msg, options, fn) {\n        this.sendPacket(\"message\", msg, options, fn);\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param {String} packet type.\n     * @param {String} data.\n     * @param {Object} options.\n     * @param {Function} callback function.\n     * @api private\n     */\n    sendPacket(type, data, options, fn) {\n        if (\"function\" === typeof data) {\n            fn = data;\n            data = undefined;\n        }\n        if (\"function\" === typeof options) {\n            fn = options;\n            options = null;\n        }\n        if (\"closing\" === this.readyState || \"closed\" === this.readyState) {\n            return;\n        }\n        options = options || {};\n        options.compress = false !== options.compress;\n        const packet = {\n            type: type,\n            data: data,\n            options: options\n        };\n        this.emitReserved(\"packetCreate\", packet);\n        this.writeBuffer.push(packet);\n        if (fn)\n            this.once(\"flush\", fn);\n        this.flush();\n    }\n    /**\n     * Closes the connection.\n     *\n     * @api public\n     */\n    close() {\n        const close = () => {\n            this.onClose(\"forced close\");\n            this.transport.close();\n        };\n        const cleanupAndClose = () => {\n            this.off(\"upgrade\", cleanupAndClose);\n            this.off(\"upgradeError\", cleanupAndClose);\n            close();\n        };\n        const waitForUpgrade = () => {\n            // wait for upgrade to finish since we can't send packets while pausing a transport\n            this.once(\"upgrade\", cleanupAndClose);\n            this.once(\"upgradeError\", cleanupAndClose);\n        };\n        if (\"opening\" === this.readyState || \"open\" === this.readyState) {\n            this.readyState = \"closing\";\n            if (this.writeBuffer.length) {\n                this.once(\"drain\", () => {\n                    if (this.upgrading) {\n                        waitForUpgrade();\n                    }\n                    else {\n                        close();\n                    }\n                });\n            }\n            else if (this.upgrading) {\n                waitForUpgrade();\n            }\n            else {\n                close();\n            }\n        }\n        return this;\n    }\n    /**\n     * Called upon transport error\n     *\n     * @api private\n     */\n    onError(err) {\n        Socket.priorWebsocketSuccess = false;\n        this.emitReserved(\"error\", err);\n        this.onClose(\"transport error\", err);\n    }\n    /**\n     * Called upon transport close.\n     *\n     * @api private\n     */\n    onClose(reason, desc) {\n        if (\"opening\" === this.readyState ||\n            \"open\" === this.readyState ||\n            \"closing\" === this.readyState) {\n            // clear timers\n            this.clearTimeoutFn(this.pingTimeoutTimer);\n            // stop event from firing again for transport\n            this.transport.removeAllListeners(\"close\");\n            // ensure transport won't stay open\n            this.transport.close();\n            // ignore further transport communication\n            this.transport.removeAllListeners();\n            if (typeof removeEventListener === \"function\") {\n                removeEventListener(\"offline\", this.offlineEventListener, false);\n            }\n            // set ready state\n            this.readyState = \"closed\";\n            // clear session id\n            this.id = null;\n            // emit close event\n            this.emitReserved(\"close\", reason, desc);\n            // clean buffers after, so users can still\n            // grab the buffers on `close` event\n            this.writeBuffer = [];\n            this.prevBufferLen = 0;\n        }\n    }\n    /**\n     * Filters upgrades, returning only those matching client transports.\n     *\n     * @param {Array} server upgrades\n     * @api private\n     *\n     */\n    filterUpgrades(upgrades) {\n        const filteredUpgrades = [];\n        let i = 0;\n        const j = upgrades.length;\n        for (; i < j; i++) {\n            if (~this.transports.indexOf(upgrades[i]))\n                filteredUpgrades.push(upgrades[i]);\n        }\n        return filteredUpgrades;\n    }\n}\nSocket.protocol = protocol;\nfunction clone(obj) {\n    const o = {};\n    for (let i in obj) {\n        if (obj.hasOwnProperty(i)) {\n            o[i] = obj[i];\n        }\n    }\n    return o;\n}\n","const withNativeArrayBuffer = typeof ArrayBuffer === \"function\";\nconst isView = (obj) => {\n    return typeof ArrayBuffer.isView === \"function\"\n        ? ArrayBuffer.isView(obj)\n        : obj.buffer instanceof ArrayBuffer;\n};\nconst toString = Object.prototype.toString;\nconst withNativeBlob = typeof Blob === \"function\" ||\n    (typeof Blob !== \"undefined\" &&\n        toString.call(Blob) === \"[object BlobConstructor]\");\nconst withNativeFile = typeof File === \"function\" ||\n    (typeof File !== \"undefined\" &&\n        toString.call(File) === \"[object FileConstructor]\");\n/**\n * Returns true if obj is a Buffer, an ArrayBuffer, a Blob or a File.\n *\n * @private\n */\nexport function isBinary(obj) {\n    return ((withNativeArrayBuffer && (obj instanceof ArrayBuffer || isView(obj))) ||\n        (withNativeBlob && obj instanceof Blob) ||\n        (withNativeFile && obj instanceof File));\n}\nexport function hasBinary(obj, toJSON) {\n    if (!obj || typeof obj !== \"object\") {\n        return false;\n    }\n    if (Array.isArray(obj)) {\n        for (let i = 0, l = obj.length; i < l; i++) {\n            if (hasBinary(obj[i])) {\n                return true;\n            }\n        }\n        return false;\n    }\n    if (isBinary(obj)) {\n        return true;\n    }\n    if (obj.toJSON &&\n        typeof obj.toJSON === \"function\" &&\n        arguments.length === 1) {\n        return hasBinary(obj.toJSON(), true);\n    }\n    for (const key in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, key) && hasBinary(obj[key])) {\n            return true;\n        }\n    }\n    return false;\n}\n","import { isBinary } from \"./is-binary.js\";\n/**\n * Replaces every Buffer | ArrayBuffer | Blob | File in packet with a numbered placeholder.\n *\n * @param {Object} packet - socket.io event packet\n * @return {Object} with deconstructed packet and list of buffers\n * @public\n */\nexport function deconstructPacket(packet) {\n    const buffers = [];\n    const packetData = packet.data;\n    const pack = packet;\n    pack.data = _deconstructPacket(packetData, buffers);\n    pack.attachments = buffers.length; // number of binary 'attachments'\n    return { packet: pack, buffers: buffers };\n}\nfunction _deconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (isBinary(data)) {\n        const placeholder = { _placeholder: true, num: buffers.length };\n        buffers.push(data);\n        return placeholder;\n    }\n    else if (Array.isArray(data)) {\n        const newData = new Array(data.length);\n        for (let i = 0; i < data.length; i++) {\n            newData[i] = _deconstructPacket(data[i], buffers);\n        }\n        return newData;\n    }\n    else if (typeof data === \"object\" && !(data instanceof Date)) {\n        const newData = {};\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                newData[key] = _deconstructPacket(data[key], buffers);\n            }\n        }\n        return newData;\n    }\n    return data;\n}\n/**\n * Reconstructs a binary packet from its placeholder packet and buffers\n *\n * @param {Object} packet - event packet with placeholders\n * @param {Array} buffers - binary buffers to put in placeholder positions\n * @return {Object} reconstructed packet\n * @public\n */\nexport function reconstructPacket(packet, buffers) {\n    packet.data = _reconstructPacket(packet.data, buffers);\n    packet.attachments = undefined; // no longer useful\n    return packet;\n}\nfunction _reconstructPacket(data, buffers) {\n    if (!data)\n        return data;\n    if (data && data._placeholder) {\n        return buffers[data.num]; // appropriate buffer (should be natural order anyway)\n    }\n    else if (Array.isArray(data)) {\n        for (let i = 0; i < data.length; i++) {\n            data[i] = _reconstructPacket(data[i], buffers);\n        }\n    }\n    else if (typeof data === \"object\") {\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                data[key] = _reconstructPacket(data[key], buffers);\n            }\n        }\n    }\n    return data;\n}\n","import { Emitter } from \"@socket.io/component-emitter\";\nimport { deconstructPacket, reconstructPacket } from \"./binary.js\";\nimport { isBinary, hasBinary } from \"./is-binary.js\";\n/**\n * Protocol version.\n *\n * @public\n */\nexport const protocol = 5;\nexport var PacketType;\n(function (PacketType) {\n    PacketType[PacketType[\"CONNECT\"] = 0] = \"CONNECT\";\n    PacketType[PacketType[\"DISCONNECT\"] = 1] = \"DISCONNECT\";\n    PacketType[PacketType[\"EVENT\"] = 2] = \"EVENT\";\n    PacketType[PacketType[\"ACK\"] = 3] = \"ACK\";\n    PacketType[PacketType[\"CONNECT_ERROR\"] = 4] = \"CONNECT_ERROR\";\n    PacketType[PacketType[\"BINARY_EVENT\"] = 5] = \"BINARY_EVENT\";\n    PacketType[PacketType[\"BINARY_ACK\"] = 6] = \"BINARY_ACK\";\n})(PacketType || (PacketType = {}));\n/**\n * A socket.io Encoder instance\n */\nexport class Encoder {\n    /**\n     * Encode a packet as a single string if non-binary, or as a\n     * buffer sequence, depending on packet type.\n     *\n     * @param {Object} obj - packet object\n     */\n    encode(obj) {\n        if (obj.type === PacketType.EVENT || obj.type === PacketType.ACK) {\n            if (hasBinary(obj)) {\n                obj.type =\n                    obj.type === PacketType.EVENT\n                        ? PacketType.BINARY_EVENT\n                        : PacketType.BINARY_ACK;\n                return this.encodeAsBinary(obj);\n            }\n        }\n        return [this.encodeAsString(obj)];\n    }\n    /**\n     * Encode packet as string.\n     */\n    encodeAsString(obj) {\n        // first is type\n        let str = \"\" + obj.type;\n        // attachments if we have them\n        if (obj.type === PacketType.BINARY_EVENT ||\n            obj.type === PacketType.BINARY_ACK) {\n            str += obj.attachments + \"-\";\n        }\n        // if we have a namespace other than `/`\n        // we append it followed by a comma `,`\n        if (obj.nsp && \"/\" !== obj.nsp) {\n            str += obj.nsp + \",\";\n        }\n        // immediately followed by the id\n        if (null != obj.id) {\n            str += obj.id;\n        }\n        // json data\n        if (null != obj.data) {\n            str += JSON.stringify(obj.data);\n        }\n        return str;\n    }\n    /**\n     * Encode packet as 'buffer sequence' by removing blobs, and\n     * deconstructing packet into object with placeholders and\n     * a list of buffers.\n     */\n    encodeAsBinary(obj) {\n        const deconstruction = deconstructPacket(obj);\n        const pack = this.encodeAsString(deconstruction.packet);\n        const buffers = deconstruction.buffers;\n        buffers.unshift(pack); // add packet info to beginning of data list\n        return buffers; // write all the buffers\n    }\n}\n/**\n * A socket.io Decoder instance\n *\n * @return {Object} decoder\n */\nexport class Decoder extends Emitter {\n    constructor() {\n        super();\n    }\n    /**\n     * Decodes an encoded packet string into packet JSON.\n     *\n     * @param {String} obj - encoded packet\n     */\n    add(obj) {\n        let packet;\n        if (typeof obj === \"string\") {\n            packet = this.decodeString(obj);\n            if (packet.type === PacketType.BINARY_EVENT ||\n                packet.type === PacketType.BINARY_ACK) {\n                // binary packet's json\n                this.reconstructor = new BinaryReconstructor(packet);\n                // no attachments, labeled binary but no binary data to follow\n                if (packet.attachments === 0) {\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n            else {\n                // non-binary full packet\n                super.emitReserved(\"decoded\", packet);\n            }\n        }\n        else if (isBinary(obj) || obj.base64) {\n            // raw binary data\n            if (!this.reconstructor) {\n                throw new Error(\"got binary data when not reconstructing a packet\");\n            }\n            else {\n                packet = this.reconstructor.takeBinaryData(obj);\n                if (packet) {\n                    // received final buffer\n                    this.reconstructor = null;\n                    super.emitReserved(\"decoded\", packet);\n                }\n            }\n        }\n        else {\n            throw new Error(\"Unknown type: \" + obj);\n        }\n    }\n    /**\n     * Decode a packet String (JSON data)\n     *\n     * @param {String} str\n     * @return {Object} packet\n     */\n    decodeString(str) {\n        let i = 0;\n        // look up type\n        const p = {\n            type: Number(str.charAt(0)),\n        };\n        if (PacketType[p.type] === undefined) {\n            throw new Error(\"unknown packet type \" + p.type);\n        }\n        // look up attachments if type binary\n        if (p.type === PacketType.BINARY_EVENT ||\n            p.type === PacketType.BINARY_ACK) {\n            const start = i + 1;\n            while (str.charAt(++i) !== \"-\" && i != str.length) { }\n            const buf = str.substring(start, i);\n            if (buf != Number(buf) || str.charAt(i) !== \"-\") {\n                throw new Error(\"Illegal attachments\");\n            }\n            p.attachments = Number(buf);\n        }\n        // look up namespace (if any)\n        if (\"/\" === str.charAt(i + 1)) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (\",\" === c)\n                    break;\n                if (i === str.length)\n                    break;\n            }\n            p.nsp = str.substring(start, i);\n        }\n        else {\n            p.nsp = \"/\";\n        }\n        // look up id\n        const next = str.charAt(i + 1);\n        if (\"\" !== next && Number(next) == next) {\n            const start = i + 1;\n            while (++i) {\n                const c = str.charAt(i);\n                if (null == c || Number(c) != c) {\n                    --i;\n                    break;\n                }\n                if (i === str.length)\n                    break;\n            }\n            p.id = Number(str.substring(start, i + 1));\n        }\n        // look up json data\n        if (str.charAt(++i)) {\n            const payload = tryParse(str.substr(i));\n            if (Decoder.isPayloadValid(p.type, payload)) {\n                p.data = payload;\n            }\n            else {\n                throw new Error(\"invalid payload\");\n            }\n        }\n        return p;\n    }\n    static isPayloadValid(type, payload) {\n        switch (type) {\n            case PacketType.CONNECT:\n                return typeof payload === \"object\";\n            case PacketType.DISCONNECT:\n                return payload === undefined;\n            case PacketType.CONNECT_ERROR:\n                return typeof payload === \"string\" || typeof payload === \"object\";\n            case PacketType.EVENT:\n            case PacketType.BINARY_EVENT:\n                return Array.isArray(payload) && payload.length > 0;\n            case PacketType.ACK:\n            case PacketType.BINARY_ACK:\n                return Array.isArray(payload);\n        }\n    }\n    /**\n     * Deallocates a parser's resources\n     */\n    destroy() {\n        if (this.reconstructor) {\n            this.reconstructor.finishedReconstruction();\n        }\n    }\n}\nfunction tryParse(str) {\n    try {\n        return JSON.parse(str);\n    }\n    catch (e) {\n        return false;\n    }\n}\n/**\n * A manager of a binary event's 'buffer sequence'. Should\n * be constructed whenever a packet of type BINARY_EVENT is\n * decoded.\n *\n * @param {Object} packet\n * @return {BinaryReconstructor} initialized reconstructor\n */\nclass BinaryReconstructor {\n    constructor(packet) {\n        this.packet = packet;\n        this.buffers = [];\n        this.reconPack = packet;\n    }\n    /**\n     * Method to be called when binary data received from connection\n     * after a BINARY_EVENT packet.\n     *\n     * @param {Buffer | ArrayBuffer} binData - the raw binary data received\n     * @return {null | Object} returns null if more binary data is expected or\n     *   a reconstructed packet object if all buffers have been received.\n     */\n    takeBinaryData(binData) {\n        this.buffers.push(binData);\n        if (this.buffers.length === this.reconPack.attachments) {\n            // done with buffer list\n            const packet = reconstructPacket(this.reconPack, this.buffers);\n            this.finishedReconstruction();\n            return packet;\n        }\n        return null;\n    }\n    /**\n     * Cleans up binary packet reconstruction variables.\n     */\n    finishedReconstruction() {\n        this.reconPack = null;\n        this.buffers = [];\n    }\n}\n","export function on(obj, ev, fn) {\n    obj.on(ev, fn);\n    return function subDestroy() {\n        obj.off(ev, fn);\n    };\n}\n","import { PacketType } from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\n/**\n * Internal events.\n * These events can't be emitted by the user.\n */\nconst RESERVED_EVENTS = Object.freeze({\n    connect: 1,\n    connect_error: 1,\n    disconnect: 1,\n    disconnecting: 1,\n    // EventEmitter reserved events: https://nodejs.org/api/events.html#events_event_newlistener\n    newListener: 1,\n    removeListener: 1,\n});\nexport class Socket extends Emitter {\n    /**\n     * `Socket` constructor.\n     *\n     * @public\n     */\n    constructor(io, nsp, opts) {\n        super();\n        this.connected = false;\n        this.disconnected = true;\n        this.receiveBuffer = [];\n        this.sendBuffer = [];\n        this.ids = 0;\n        this.acks = {};\n        this.flags = {};\n        this.io = io;\n        this.nsp = nsp;\n        if (opts && opts.auth) {\n            this.auth = opts.auth;\n        }\n        if (this.io._autoConnect)\n            this.open();\n    }\n    /**\n     * Subscribe to open, close and packet events\n     *\n     * @private\n     */\n    subEvents() {\n        if (this.subs)\n            return;\n        const io = this.io;\n        this.subs = [\n            on(io, \"open\", this.onopen.bind(this)),\n            on(io, \"packet\", this.onpacket.bind(this)),\n            on(io, \"error\", this.onerror.bind(this)),\n            on(io, \"close\", this.onclose.bind(this)),\n        ];\n    }\n    /**\n     * Whether the Socket will try to reconnect when its Manager connects or reconnects\n     */\n    get active() {\n        return !!this.subs;\n    }\n    /**\n     * \"Opens\" the socket.\n     *\n     * @public\n     */\n    connect() {\n        if (this.connected)\n            return this;\n        this.subEvents();\n        if (!this.io[\"_reconnecting\"])\n            this.io.open(); // ensure open\n        if (\"open\" === this.io._readyState)\n            this.onopen();\n        return this;\n    }\n    /**\n     * Alias for connect()\n     */\n    open() {\n        return this.connect();\n    }\n    /**\n     * Sends a `message` event.\n     *\n     * @return self\n     * @public\n     */\n    send(...args) {\n        args.unshift(\"message\");\n        this.emit.apply(this, args);\n        return this;\n    }\n    /**\n     * Override `emit`.\n     * If the event is in `events`, it's emitted normally.\n     *\n     * @return self\n     * @public\n     */\n    emit(ev, ...args) {\n        if (RESERVED_EVENTS.hasOwnProperty(ev)) {\n            throw new Error('\"' + ev + '\" is a reserved event name');\n        }\n        args.unshift(ev);\n        const packet = {\n            type: PacketType.EVENT,\n            data: args,\n        };\n        packet.options = {};\n        packet.options.compress = this.flags.compress !== false;\n        // event ack callback\n        if (\"function\" === typeof args[args.length - 1]) {\n            this.acks[this.ids] = args.pop();\n            packet.id = this.ids++;\n        }\n        const isTransportWritable = this.io.engine &&\n            this.io.engine.transport &&\n            this.io.engine.transport.writable;\n        const discardPacket = this.flags.volatile && (!isTransportWritable || !this.connected);\n        if (discardPacket) {\n        }\n        else if (this.connected) {\n            this.packet(packet);\n        }\n        else {\n            this.sendBuffer.push(packet);\n        }\n        this.flags = {};\n        return this;\n    }\n    /**\n     * Sends a packet.\n     *\n     * @param packet\n     * @private\n     */\n    packet(packet) {\n        packet.nsp = this.nsp;\n        this.io._packet(packet);\n    }\n    /**\n     * Called upon engine `open`.\n     *\n     * @private\n     */\n    onopen() {\n        if (typeof this.auth == \"function\") {\n            this.auth((data) => {\n                this.packet({ type: PacketType.CONNECT, data });\n            });\n        }\n        else {\n            this.packet({ type: PacketType.CONNECT, data: this.auth });\n        }\n    }\n    /**\n     * Called upon engine or manager `error`.\n     *\n     * @param err\n     * @private\n     */\n    onerror(err) {\n        if (!this.connected) {\n            this.emitReserved(\"connect_error\", err);\n        }\n    }\n    /**\n     * Called upon engine `close`.\n     *\n     * @param reason\n     * @private\n     */\n    onclose(reason) {\n        this.connected = false;\n        this.disconnected = true;\n        delete this.id;\n        this.emitReserved(\"disconnect\", reason);\n    }\n    /**\n     * Called with socket packet.\n     *\n     * @param packet\n     * @private\n     */\n    onpacket(packet) {\n        const sameNamespace = packet.nsp === this.nsp;\n        if (!sameNamespace)\n            return;\n        switch (packet.type) {\n            case PacketType.CONNECT:\n                if (packet.data && packet.data.sid) {\n                    const id = packet.data.sid;\n                    this.onconnect(id);\n                }\n                else {\n                    this.emitReserved(\"connect_error\", new Error(\"It seems you are trying to reach a Socket.IO server in v2.x with a v3.x client, but they are not compatible (more information here: https://socket.io/docs/v3/migrating-from-2-x-to-3-0/)\"));\n                }\n                break;\n            case PacketType.EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.BINARY_EVENT:\n                this.onevent(packet);\n                break;\n            case PacketType.ACK:\n                this.onack(packet);\n                break;\n            case PacketType.BINARY_ACK:\n                this.onack(packet);\n                break;\n            case PacketType.DISCONNECT:\n                this.ondisconnect();\n                break;\n            case PacketType.CONNECT_ERROR:\n                const err = new Error(packet.data.message);\n                // @ts-ignore\n                err.data = packet.data.data;\n                this.emitReserved(\"connect_error\", err);\n                break;\n        }\n    }\n    /**\n     * Called upon a server event.\n     *\n     * @param packet\n     * @private\n     */\n    onevent(packet) {\n        const args = packet.data || [];\n        if (null != packet.id) {\n            args.push(this.ack(packet.id));\n        }\n        if (this.connected) {\n            this.emitEvent(args);\n        }\n        else {\n            this.receiveBuffer.push(Object.freeze(args));\n        }\n    }\n    emitEvent(args) {\n        if (this._anyListeners && this._anyListeners.length) {\n            const listeners = this._anyListeners.slice();\n            for (const listener of listeners) {\n                listener.apply(this, args);\n            }\n        }\n        super.emit.apply(this, args);\n    }\n    /**\n     * Produces an ack callback to emit with an event.\n     *\n     * @private\n     */\n    ack(id) {\n        const self = this;\n        let sent = false;\n        return function (...args) {\n            // prevent double callbacks\n            if (sent)\n                return;\n            sent = true;\n            self.packet({\n                type: PacketType.ACK,\n                id: id,\n                data: args,\n            });\n        };\n    }\n    /**\n     * Called upon a server acknowlegement.\n     *\n     * @param packet\n     * @private\n     */\n    onack(packet) {\n        const ack = this.acks[packet.id];\n        if (\"function\" === typeof ack) {\n            ack.apply(this, packet.data);\n            delete this.acks[packet.id];\n        }\n        else {\n        }\n    }\n    /**\n     * Called upon server connect.\n     *\n     * @private\n     */\n    onconnect(id) {\n        this.id = id;\n        this.connected = true;\n        this.disconnected = false;\n        this.emitBuffered();\n        this.emitReserved(\"connect\");\n    }\n    /**\n     * Emit buffered events (received and emitted).\n     *\n     * @private\n     */\n    emitBuffered() {\n        this.receiveBuffer.forEach((args) => this.emitEvent(args));\n        this.receiveBuffer = [];\n        this.sendBuffer.forEach((packet) => this.packet(packet));\n        this.sendBuffer = [];\n    }\n    /**\n     * Called upon server disconnect.\n     *\n     * @private\n     */\n    ondisconnect() {\n        this.destroy();\n        this.onclose(\"io server disconnect\");\n    }\n    /**\n     * Called upon forced client/server side disconnections,\n     * this method ensures the manager stops tracking us and\n     * that reconnections don't get triggered for this.\n     *\n     * @private\n     */\n    destroy() {\n        if (this.subs) {\n            // clean subscriptions to avoid reconnections\n            this.subs.forEach((subDestroy) => subDestroy());\n            this.subs = undefined;\n        }\n        this.io[\"_destroy\"](this);\n    }\n    /**\n     * Disconnects the socket manually.\n     *\n     * @return self\n     * @public\n     */\n    disconnect() {\n        if (this.connected) {\n            this.packet({ type: PacketType.DISCONNECT });\n        }\n        // remove socket from pool\n        this.destroy();\n        if (this.connected) {\n            // fire events\n            this.onclose(\"io client disconnect\");\n        }\n        return this;\n    }\n    /**\n     * Alias for disconnect()\n     *\n     * @return self\n     * @public\n     */\n    close() {\n        return this.disconnect();\n    }\n    /**\n     * Sets the compress flag.\n     *\n     * @param compress - if `true`, compresses the sending data\n     * @return self\n     * @public\n     */\n    compress(compress) {\n        this.flags.compress = compress;\n        return this;\n    }\n    /**\n     * Sets a modifier for a subsequent event emission that the event message will be dropped when this socket is not\n     * ready to send messages.\n     *\n     * @returns self\n     * @public\n     */\n    get volatile() {\n        this.flags.volatile = true;\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback.\n     *\n     * @param listener\n     * @public\n     */\n    onAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.push(listener);\n        return this;\n    }\n    /**\n     * Adds a listener that will be fired when any event is emitted. The event name is passed as the first argument to the\n     * callback. The listener is added to the beginning of the listeners array.\n     *\n     * @param listener\n     * @public\n     */\n    prependAny(listener) {\n        this._anyListeners = this._anyListeners || [];\n        this._anyListeners.unshift(listener);\n        return this;\n    }\n    /**\n     * Removes the listener that will be fired when any event is emitted.\n     *\n     * @param listener\n     * @public\n     */\n    offAny(listener) {\n        if (!this._anyListeners) {\n            return this;\n        }\n        if (listener) {\n            const listeners = this._anyListeners;\n            for (let i = 0; i < listeners.length; i++) {\n                if (listener === listeners[i]) {\n                    listeners.splice(i, 1);\n                    return this;\n                }\n            }\n        }\n        else {\n            this._anyListeners = [];\n        }\n        return this;\n    }\n    /**\n     * Returns an array of listeners that are listening for any event that is specified. This array can be manipulated,\n     * e.g. to remove listeners.\n     *\n     * @public\n     */\n    listenersAny() {\n        return this._anyListeners || [];\n    }\n}\n","\n/**\n * Expose `Backoff`.\n */\n\nmodule.exports = Backoff;\n\n/**\n * Initialize backoff timer with `opts`.\n *\n * - `min` initial timeout in milliseconds [100]\n * - `max` max timeout [10000]\n * - `jitter` [0]\n * - `factor` [2]\n *\n * @param {Object} opts\n * @api public\n */\n\nfunction Backoff(opts) {\n  opts = opts || {};\n  this.ms = opts.min || 100;\n  this.max = opts.max || 10000;\n  this.factor = opts.factor || 2;\n  this.jitter = opts.jitter > 0 && opts.jitter <= 1 ? opts.jitter : 0;\n  this.attempts = 0;\n}\n\n/**\n * Return the backoff duration.\n *\n * @return {Number}\n * @api public\n */\n\nBackoff.prototype.duration = function(){\n  var ms = this.ms * Math.pow(this.factor, this.attempts++);\n  if (this.jitter) {\n    var rand =  Math.random();\n    var deviation = Math.floor(rand * this.jitter * ms);\n    ms = (Math.floor(rand * 10) & 1) == 0  ? ms - deviation : ms + deviation;\n  }\n  return Math.min(ms, this.max) | 0;\n};\n\n/**\n * Reset the number of attempts.\n *\n * @api public\n */\n\nBackoff.prototype.reset = function(){\n  this.attempts = 0;\n};\n\n/**\n * Set the minimum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMin = function(min){\n  this.ms = min;\n};\n\n/**\n * Set the maximum duration\n *\n * @api public\n */\n\nBackoff.prototype.setMax = function(max){\n  this.max = max;\n};\n\n/**\n * Set the jitter\n *\n * @api public\n */\n\nBackoff.prototype.setJitter = function(jitter){\n  this.jitter = jitter;\n};\n\n","import { Socket as Engine, installTimerFunctions, } from \"engine.io-client\";\nimport { Socket } from \"./socket.js\";\nimport * as parser from \"socket.io-parser\";\nimport { on } from \"./on.js\";\nimport Backoff from \"backo2\";\nimport { Emitter, } from \"@socket.io/component-emitter\";\nexport class Manager extends Emitter {\n    constructor(uri, opts) {\n        var _a;\n        super();\n        this.nsps = {};\n        this.subs = [];\n        if (uri && \"object\" === typeof uri) {\n            opts = uri;\n            uri = undefined;\n        }\n        opts = opts || {};\n        opts.path = opts.path || \"/socket.io\";\n        this.opts = opts;\n        installTimerFunctions(this, opts);\n        this.reconnection(opts.reconnection !== false);\n        this.reconnectionAttempts(opts.reconnectionAttempts || Infinity);\n        this.reconnectionDelay(opts.reconnectionDelay || 1000);\n        this.reconnectionDelayMax(opts.reconnectionDelayMax || 5000);\n        this.randomizationFactor((_a = opts.randomizationFactor) !== null && _a !== void 0 ? _a : 0.5);\n        this.backoff = new Backoff({\n            min: this.reconnectionDelay(),\n            max: this.reconnectionDelayMax(),\n            jitter: this.randomizationFactor(),\n        });\n        this.timeout(null == opts.timeout ? 20000 : opts.timeout);\n        this._readyState = \"closed\";\n        this.uri = uri;\n        const _parser = opts.parser || parser;\n        this.encoder = new _parser.Encoder();\n        this.decoder = new _parser.Decoder();\n        this._autoConnect = opts.autoConnect !== false;\n        if (this._autoConnect)\n            this.open();\n    }\n    reconnection(v) {\n        if (!arguments.length)\n            return this._reconnection;\n        this._reconnection = !!v;\n        return this;\n    }\n    reconnectionAttempts(v) {\n        if (v === undefined)\n            return this._reconnectionAttempts;\n        this._reconnectionAttempts = v;\n        return this;\n    }\n    reconnectionDelay(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelay;\n        this._reconnectionDelay = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMin(v);\n        return this;\n    }\n    randomizationFactor(v) {\n        var _a;\n        if (v === undefined)\n            return this._randomizationFactor;\n        this._randomizationFactor = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setJitter(v);\n        return this;\n    }\n    reconnectionDelayMax(v) {\n        var _a;\n        if (v === undefined)\n            return this._reconnectionDelayMax;\n        this._reconnectionDelayMax = v;\n        (_a = this.backoff) === null || _a === void 0 ? void 0 : _a.setMax(v);\n        return this;\n    }\n    timeout(v) {\n        if (!arguments.length)\n            return this._timeout;\n        this._timeout = v;\n        return this;\n    }\n    /**\n     * Starts trying to reconnect if reconnection is enabled and we have not\n     * started reconnecting yet\n     *\n     * @private\n     */\n    maybeReconnectOnOpen() {\n        // Only try to reconnect if it's the first time we're connecting\n        if (!this._reconnecting &&\n            this._reconnection &&\n            this.backoff.attempts === 0) {\n            // keeps reconnection from firing twice for the same reconnection loop\n            this.reconnect();\n        }\n    }\n    /**\n     * Sets the current transport `socket`.\n     *\n     * @param {Function} fn - optional, callback\n     * @return self\n     * @public\n     */\n    open(fn) {\n        if (~this._readyState.indexOf(\"open\"))\n            return this;\n        this.engine = new Engine(this.uri, this.opts);\n        const socket = this.engine;\n        const self = this;\n        this._readyState = \"opening\";\n        this.skipReconnect = false;\n        // emit `open`\n        const openSubDestroy = on(socket, \"open\", function () {\n            self.onopen();\n            fn && fn();\n        });\n        // emit `error`\n        const errorSub = on(socket, \"error\", (err) => {\n            self.cleanup();\n            self._readyState = \"closed\";\n            this.emitReserved(\"error\", err);\n            if (fn) {\n                fn(err);\n            }\n            else {\n                // Only do this if there is no fn to handle the error\n                self.maybeReconnectOnOpen();\n            }\n        });\n        if (false !== this._timeout) {\n            const timeout = this._timeout;\n            if (timeout === 0) {\n                openSubDestroy(); // prevents a race condition with the 'open' event\n            }\n            // set timer\n            const timer = this.setTimeoutFn(() => {\n                openSubDestroy();\n                socket.close();\n                // @ts-ignore\n                socket.emit(\"error\", new Error(\"timeout\"));\n            }, timeout);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n        this.subs.push(openSubDestroy);\n        this.subs.push(errorSub);\n        return this;\n    }\n    /**\n     * Alias for open()\n     *\n     * @return self\n     * @public\n     */\n    connect(fn) {\n        return this.open(fn);\n    }\n    /**\n     * Called upon transport open.\n     *\n     * @private\n     */\n    onopen() {\n        // clear old subs\n        this.cleanup();\n        // mark as open\n        this._readyState = \"open\";\n        this.emitReserved(\"open\");\n        // add new subs\n        const socket = this.engine;\n        this.subs.push(on(socket, \"ping\", this.onping.bind(this)), on(socket, \"data\", this.ondata.bind(this)), on(socket, \"error\", this.onerror.bind(this)), on(socket, \"close\", this.onclose.bind(this)), on(this.decoder, \"decoded\", this.ondecoded.bind(this)));\n    }\n    /**\n     * Called upon a ping.\n     *\n     * @private\n     */\n    onping() {\n        this.emitReserved(\"ping\");\n    }\n    /**\n     * Called with data.\n     *\n     * @private\n     */\n    ondata(data) {\n        this.decoder.add(data);\n    }\n    /**\n     * Called when parser fully decodes a packet.\n     *\n     * @private\n     */\n    ondecoded(packet) {\n        this.emitReserved(\"packet\", packet);\n    }\n    /**\n     * Called upon socket error.\n     *\n     * @private\n     */\n    onerror(err) {\n        this.emitReserved(\"error\", err);\n    }\n    /**\n     * Creates a new socket for the given `nsp`.\n     *\n     * @return {Socket}\n     * @public\n     */\n    socket(nsp, opts) {\n        let socket = this.nsps[nsp];\n        if (!socket) {\n            socket = new Socket(this, nsp, opts);\n            this.nsps[nsp] = socket;\n        }\n        return socket;\n    }\n    /**\n     * Called upon a socket close.\n     *\n     * @param socket\n     * @private\n     */\n    _destroy(socket) {\n        const nsps = Object.keys(this.nsps);\n        for (const nsp of nsps) {\n            const socket = this.nsps[nsp];\n            if (socket.active) {\n                return;\n            }\n        }\n        this._close();\n    }\n    /**\n     * Writes a packet.\n     *\n     * @param packet\n     * @private\n     */\n    _packet(packet) {\n        const encodedPackets = this.encoder.encode(packet);\n        for (let i = 0; i < encodedPackets.length; i++) {\n            this.engine.write(encodedPackets[i], packet.options);\n        }\n    }\n    /**\n     * Clean up transport subscriptions and packet buffer.\n     *\n     * @private\n     */\n    cleanup() {\n        this.subs.forEach((subDestroy) => subDestroy());\n        this.subs.length = 0;\n        this.decoder.destroy();\n    }\n    /**\n     * Close the current socket.\n     *\n     * @private\n     */\n    _close() {\n        this.skipReconnect = true;\n        this._reconnecting = false;\n        if (\"opening\" === this._readyState) {\n            // `onclose` will not fire because\n            // an open event never happened\n            this.cleanup();\n        }\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        if (this.engine)\n            this.engine.close();\n    }\n    /**\n     * Alias for close()\n     *\n     * @private\n     */\n    disconnect() {\n        return this._close();\n    }\n    /**\n     * Called upon engine close.\n     *\n     * @private\n     */\n    onclose(reason) {\n        this.cleanup();\n        this.backoff.reset();\n        this._readyState = \"closed\";\n        this.emitReserved(\"close\", reason);\n        if (this._reconnection && !this.skipReconnect) {\n            this.reconnect();\n        }\n    }\n    /**\n     * Attempt a reconnection.\n     *\n     * @private\n     */\n    reconnect() {\n        if (this._reconnecting || this.skipReconnect)\n            return this;\n        const self = this;\n        if (this.backoff.attempts >= this._reconnectionAttempts) {\n            this.backoff.reset();\n            this.emitReserved(\"reconnect_failed\");\n            this._reconnecting = false;\n        }\n        else {\n            const delay = this.backoff.duration();\n            this._reconnecting = true;\n            const timer = this.setTimeoutFn(() => {\n                if (self.skipReconnect)\n                    return;\n                this.emitReserved(\"reconnect_attempt\", self.backoff.attempts);\n                // check again for the case socket closed in above events\n                if (self.skipReconnect)\n                    return;\n                self.open((err) => {\n                    if (err) {\n                        self._reconnecting = false;\n                        self.reconnect();\n                        this.emitReserved(\"reconnect_error\", err);\n                    }\n                    else {\n                        self.onreconnect();\n                    }\n                });\n            }, delay);\n            if (this.opts.autoUnref) {\n                timer.unref();\n            }\n            this.subs.push(function subDestroy() {\n                clearTimeout(timer);\n            });\n        }\n    }\n    /**\n     * Called upon successful reconnect.\n     *\n     * @private\n     */\n    onreconnect() {\n        const attempt = this.backoff.attempts;\n        this._reconnecting = false;\n        this.backoff.reset();\n        this.emitReserved(\"reconnect\", attempt);\n    }\n}\n","import { url } from \"./url.js\";\nimport { Manager } from \"./manager.js\";\nimport { Socket } from \"./socket.js\";\n/**\n * Managers cache.\n */\nconst cache = {};\nfunction lookup(uri, opts) {\n    if (typeof uri === \"object\") {\n        opts = uri;\n        uri = undefined;\n    }\n    opts = opts || {};\n    const parsed = url(uri, opts.path || \"/socket.io\");\n    const source = parsed.source;\n    const id = parsed.id;\n    const path = parsed.path;\n    const sameNamespace = cache[id] && path in cache[id][\"nsps\"];\n    const newConnection = opts.forceNew ||\n        opts[\"force new connection\"] ||\n        false === opts.multiplex ||\n        sameNamespace;\n    let io;\n    if (newConnection) {\n        io = new Manager(source, opts);\n    }\n    else {\n        if (!cache[id]) {\n            cache[id] = new Manager(source, opts);\n        }\n        io = cache[id];\n    }\n    if (parsed.query && !opts.query) {\n        opts.query = parsed.queryKey;\n    }\n    return io.socket(parsed.path, opts);\n}\n// so that \"lookup\" can be used both as a function (e.g. `io(...)`) and as a\n// namespace (e.g. `io.connect(...)`), for backward compatibility\nObject.assign(lookup, {\n    Manager,\n    Socket,\n    io: lookup,\n    connect: lookup,\n});\n/**\n * Protocol version.\n *\n * @public\n */\nexport { protocol } from \"socket.io-parser\";\n/**\n * Expose constructors for standalone build.\n *\n * @public\n */\nexport { Manager, Socket, lookup as io, lookup as connect, lookup as default, };\n","import parseuri from \"parseuri\";\n/**\n * URL parser.\n *\n * @param uri - url\n * @param path - the request path of the connection\n * @param loc - An object meant to mimic window.location.\n *        Defaults to window.location.\n * @public\n */\nexport function url(uri, path = \"\", loc) {\n    let obj = uri;\n    // default to window.location\n    loc = loc || (typeof location !== \"undefined\" && location);\n    if (null == uri)\n        uri = loc.protocol + \"//\" + loc.host;\n    // relative path support\n    if (typeof uri === \"string\") {\n        if (\"/\" === uri.charAt(0)) {\n            if (\"/\" === uri.charAt(1)) {\n                uri = loc.protocol + uri;\n            }\n            else {\n                uri = loc.host + uri;\n            }\n        }\n        if (!/^(https?|wss?):\\/\\//.test(uri)) {\n            if (\"undefined\" !== typeof loc) {\n                uri = loc.protocol + \"//\" + uri;\n            }\n            else {\n                uri = \"https://\" + uri;\n            }\n        }\n        // parse\n        obj = parseuri(uri);\n    }\n    // make sure we treat `localhost:80` and `localhost` equally\n    if (!obj.port) {\n        if (/^(http|ws)$/.test(obj.protocol)) {\n            obj.port = \"80\";\n        }\n        else if (/^(http|ws)s$/.test(obj.protocol)) {\n            obj.port = \"443\";\n        }\n    }\n    obj.path = obj.path || \"/\";\n    const ipv6 = obj.host.indexOf(\":\") !== -1;\n    const host = ipv6 ? \"[\" + obj.host + \"]\" : obj.host;\n    // define unique id\n    obj.id = obj.protocol + \"://\" + host + \":\" + obj.port + path;\n    // define href\n    obj.href =\n        obj.protocol +\n            \"://\" +\n            host +\n            (loc && loc.port === obj.port ? \"\" : \":\" + obj.port);\n    return obj;\n}\n"],"names":["re","parts","parseuri","str","src","b","indexOf","e","substring","replace","length","query","data","m","exec","uri","i","source","host","authority","ipv6uri","pathNames","obj","path","regx","names","split","substr","splice","queryKey","$0","$1","$2","hasCorsModule","XMLHttpRequest","err","globalThis","self","window","Function","XMLHttpRequest$1","opts","xdomain","hasCORS","concat","join","pick","_len","arguments","attr","Array","_key","reduce","acc","k","hasOwnProperty","NATIVE_SET_TIMEOUT","setTimeout","NATIVE_CLEAR_TIMEOUT","clearTimeout","installTimerFunctions","useNativeTimers","setTimeoutFn","bind","clearTimeoutFn","Emitter_1","Emitter","key","prototype","mixin","on","addEventListener","event","fn","this","_callbacks","push","once","off","apply","removeListener","removeAllListeners","removeEventListener","cb","callbacks","emit","args","len","slice","emitReserved","listeners","hasListeners","PACKET_TYPES","Object","create","PACKET_TYPES_REVERSE","keys","forEach","ERROR_PACKET","type","withNativeBlob","Blob","toString","call","withNativeArrayBuffer","ArrayBuffer","encodePacket","_ref","supportsBinary","callback","encodeBlobAsBase64","isView","buffer","fileReader","FileReader","onload","content","result","readAsDataURL","chars","lookup","Uint8Array","charCodeAt","decode","prev","decodePacket","encodedPacket","binaryType","mapBinary","charAt","decodeBase64Packet","decoded","base64","encoded1","encoded2","encoded3","encoded4","bufferLength","p","arraybuffer","bytes","SEPARATOR","String","fromCharCode","Transport","_inherits","_Emitter","_super","_createSuper","_this","_classCallCheck","writable","_assertThisInitialized","readyState","socket","_createClass","value","msg","desc","Error","description","_get","_getPrototypeOf","doOpen","doClose","onClose","packets","write","packet","onPacket","alphabet","map","seed","encode","num","encoded","Math","floor","yeast","now","Date","yeast_1","parseqs","encodeURIComponent","qs","qry","pairs","l","pair","decodeURIComponent","Polling","_Transport","polling","get","poll","onPause","_this2","pause","total","doPoll","_this3","encodedPayload","encodedPackets","decodedPacket","decodePayload","onOpen","_this4","close","_this5","count","encodePayload","doWrite","schema","secure","port","timestampRequests","timestampParam","sid","b64","Number","encodedQuery","hostname","empty","hasXHR2","responseType","XHR","_Polling","location","isSSL","protocol","xd","xs","forceBase64","undefined","_extends","Request","req","request","method","onError","onData","pollXhr","_super2","async","xscheme","xhr","open","extraHeaders","setDisableHeaderCheck","setRequestHeader","withCredentials","requestTimeout","timeout","onreadystatechange","status","onLoad","send","document","index","requestsCount","requests","cleanup","onSuccess","fromError","abort","responseText","attachEvent","unloadHandler","nextTick","Promise","resolve","then","WebSocket","MozWebSocket","isReactNative","navigator","product","toLowerCase","transports","websocket","WS","check","protocols","headers","ws","addEventListeners","onopen","autoUnref","_socket","unref","onclose","onmessage","ev","onerror","_loop","lastPacket","name","Socket","_typeof","writeBuffer","prevBufferLen","agent","upgrade","rememberUpgrade","rejectUnauthorized","perMessageDeflate","threshold","transportOptions","closeOnBeforeunload","id","upgrades","pingInterval","pingTimeout","pingTimeoutTimer","transport","offlineEventListener","o","clone","EIO","priorWebsocketSuccess","createTransport","shift","setTransport","onDrain","failed","onTransportOpen","upgrading","flush","freezeTransport","error","onTransportClose","onupgrade","to","probe","onHandshake","JSON","parse","resetPingTimeout","sendPacket","code","filterUpgrades","options","compress","_this6","cleanupAndClose","waitForUpgrade","reason","filteredUpgrades","j","withNativeFile","File","isBinary","hasBinary","toJSON","isArray","deconstructPacket","buffers","packetData","pack","_deconstructPacket","attachments","placeholder","_placeholder","newData","reconstructPacket","_reconstructPacket","PacketType","Encoder","EVENT","ACK","encodeAsString","BINARY_EVENT","BINARY_ACK","encodeAsBinary","nsp","stringify","deconstruction","unshift","Decoder","decodeString","reconstructor","BinaryReconstructor","takeBinaryData","start","buf","next","c","payload","tryParse","isPayloadValid","finishedReconstruction","CONNECT","DISCONNECT","CONNECT_ERROR","reconPack","binData","RESERVED_EVENTS","freeze","connect","connect_error","disconnect","disconnecting","newListener","io","connected","disconnected","receiveBuffer","sendBuffer","ids","acks","flags","auth","_autoConnect","subs","onpacket","subEvents","_readyState","_len2","_key2","pop","isTransportWritable","engine","discardPacket","_packet","onconnect","onevent","onack","ondisconnect","message","ack","emitEvent","_anyListeners","_step","_iterator","_createForOfIteratorHelper","s","n","done","f","sent","_len3","_key3","emitBuffered","destroy","subDestroy","listener","backo2","Backoff","ms","min","max","factor","jitter","attempts","duration","pow","rand","random","deviation","reset","setMin","setMax","setJitter","Manager","_a","nsps","reconnection","reconnectionAttempts","Infinity","reconnectionDelay","reconnectionDelayMax","randomizationFactor","backoff","_parser","parser","encoder","decoder","autoConnect","v","_reconnection","_reconnectionAttempts","_reconnectionDelay","_randomizationFactor","_reconnectionDelayMax","_timeout","_reconnecting","reconnect","Engine","skipReconnect","openSubDestroy","errorSub","maybeReconnectOnOpen","timer","onping","ondata","ondecoded","add","_i","_nsps","active","_close","delay","onreconnect","attempt","cache","parsed","loc","test","href","url","sameNamespace","forceNew","multiplex"],"version":3,"file":"project.c16236eb.js.map"}